{"ast":null,"code":"var _jsxFileName = \"/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/TaskView.js\";\nimport React from 'react';\nimport '../shared/TaskView.css';\nimport done from './TaskView/done.png';\nimport { Nav, Modal, Button, Form, Spinner, ListGroup, Popover, OverlayTrigger, InputGroup, DropdownButton, Dropdown, FormControl } from 'react-bootstrap';\nimport add from './TaskView/add.png';\nimport trash from './shared/trash.png';\nimport axios from 'axios';\nimport TaskUsers from './TaskView/TaskUsers';\nimport open from '../shared/open-menu.png';\nexport default class TaskView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalDisplay: 'none',\n      isLoaded: false,\n      deleteModalDisplay: 'none',\n      tasksList: 'none',\n      tasks: [],\n      Users: [],\n      projects: [],\n      assignee: [],\n      assigneeID: '',\n      assigneeChosen: '',\n      projectName: 'Project',\n      assigneeName: 'Task Assignee',\n      getUsersRequest: axios.get(\"/api/v1/admin/assigned_tasks\", {\n        headers: {\n          'auth-token': `${localStorage.getItem('auth-token')}`\n        }\n      }),\n      getTasksRequest: axios.get(\"/api/v1/admin/get_users\", {\n        headers: {\n          'auth-token': `${localStorage.getItem('auth-token')}`\n        }\n      }),\n      getProjectsRequest: axios.get(\"/api/v1/admin/get_projects\", {\n        headers: {\n          'auth-token': `${localStorage.getItem('auth-token')}`\n        }\n      })\n    };\n\n    this.toggleDeleteModal = () => {\n      this.state.deleteModalDisplay === 'none' ? this.setState({\n        deleteModalDisplay: 'block'\n      }) : this.setState({\n        deleteModalDisplay: 'none'\n      });\n    };\n\n    this.toggleModalDisplay = () => {\n      this.state.modalDisplay === 'none' ? this.setState({\n        modalDisplay: 'block'\n      }) : this.setState({\n        modalDisplay: 'none'\n      });\n    };\n\n    this.toggleListsDisplay = () => {\n      this.state.tasksList === 'none' ? this.setState({\n        tasksList: 'block'\n      }) : this.setState({\n        tasksList: 'none'\n      });\n    };\n\n    this.reloadPage = () => {\n      this.props.loadPage('tasks');\n      window.location.reload();\n    };\n\n    this.deleteTask = id => {\n      axios.delete(\"/api/v1/admin/delete_task/\" + id, {\n        headers: {\n          'auth-token': `${localStorage.getItem('auth-token')}`\n        }\n      }).then(res => {\n        alert(res);\n        this.reloadPage();\n      }).catch(err => console.log(err));\n    };\n\n    this.getUserID = userName => {\n      this.setState({\n        assigneeChosen: userName\n      });\n      return userName;\n    };\n  }\n\n  componentDidMount() {\n    axios.all([this.state.getUsersRequest, this.state.getTasksRequest, this.state.getProjectsRequest]).then(axios.spread((...responses) => {\n      this.setState({\n        isLoaded: true,\n        tasks: responses[0].data,\n        Users: responses[1].data,\n        projects: responses[2].data\n      }); // use/access the results \n    })).catch(errors => {\n      // react on errors.\n      return errors;\n    });\n    localStorage.setItem(\"page\", \"tasks\");\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      const UserTasks = this.state.tasks.filter(task => {\n        return task.userAssigned.toLowerCase() === this.state.assigneeChosen.toLowerCase();\n      });\n      const popover = /*#__PURE__*/React.createElement(Popover, {\n        id: \"popover-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Popover.Title, {\n        as: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, \"Popover right\"), /*#__PURE__*/React.createElement(Popover.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, \"And here's some \", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }, \"amazing\"), \" content. It's very engaging. right?\"));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.tasksList\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        className: \"modal-add-user\",\n        style: {\n          display: this.state.tasksList\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        style: {\n          fontSize: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"complete-tasks-nav\",\n        style: {\n          padding: '8px 8px',\n          border: 'solid 1px green',\n          color: 'green',\n          borderRadius: '8px',\n          margin: '0.5rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }\n      }, \"Completed tasks \", UserTasks.filter(task => task.complete).length, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"complete-tasks-nav\",\n        style: {\n          padding: '8px 8px',\n          border: 'solid 1px #000',\n          color: '#000',\n          borderRadius: '8px',\n          margin: '0.5rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, \"Tasks Due \", UserTasks.filter(task => !task.complete).length))), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }, UserTasks.reverse().map(task => {\n        return /*#__PURE__*/React.createElement(ListGroup.Item, {\n          key: task._id,\n          variant: \"light\",\n          style: {\n            marginBottom: '15px',\n            color: '#000',\n            fontSize: '16px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignContent: 'space-around'\n          },\n          onClick: () => {\n            console.log('does this work?');\n            this.setState({\n              assigneeID: task._id\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            width: '60%',\n            textDecoration: `${task.complete ? 'line-through' : 'none'}`,\n            color: `${task.complete ? 'green' : 'black'}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 41\n          }\n        }, task.description), /*#__PURE__*/React.createElement(OverlayTrigger, {\n          trigger: \"click\",\n          placement: \"top\",\n          overlay: popover,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: open,\n          alt: \"trash\",\n          width: \"20px\",\n          height: \"20px\",\n          style: {\n            position: 'absolute',\n            right: '65px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"img\", {\n          src: trash,\n          alt: \"trash\",\n          width: \"20px\",\n          height: \"20px\",\n          style: {\n            position: 'absolute',\n            right: '25px'\n          },\n          onClick: this.toggleDeleteModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 41\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleListsDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 33\n        }\n      }, \"Close\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.modalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        className: \"modal-add-user\",\n        style: {\n          display: this.state.modalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }\n      }, \"Assign Task\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formEventName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      }, \"Project Name\"), /*#__PURE__*/React.createElement(DropdownButton, {\n        as: InputGroup.Prepend,\n        variant: \"outline-secondary\",\n        title: this.state.projectName,\n        id: \"input-group-dropdown-11\",\n        name: \"project\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 37\n        }\n      }, this.state.projects.map(project => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: project._id,\n          onClick: () => {\n            this.setState({\n              projectName: project.projectName\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 49\n          }\n        }, project.projectName);\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 37\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        as: InputGroup.Prepend,\n        variant: \"outline-secondary\",\n        title: this.state.assigneeName,\n        id: \"input-group-dropdown-1\",\n        name: \"assignee\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 37\n        }\n      }, this.state.Users.map(user => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: user._id,\n          onClick: () => {\n            this.setState({\n              assignee: user.username,\n              assigneeName: user.fullname,\n              assigneeID: user._id\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 49\n          }\n        }, user.fullname);\n      })), /*#__PURE__*/React.createElement(FormControl, {\n        \"aria-describedby\": \"basic-addon1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 37\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"taskdetails\",\n        as: \"textarea\",\n        rows: \"4\",\n        placeholder: \"write task details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 37\n        }\n      }, \"Due date\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"date\",\n        as: \"textarea\",\n        rows: \"4\",\n        placeholder: \"e.g DD/MM/YY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 37\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 33\n        }\n      }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          console.log('assigning....');\n          const newTask = {\n            projectName: this.state.projectName,\n            userAssigned: this.state.assignee,\n            description: document.getElementsByName(\"taskdetails\")[0].value,\n            dueDate: document.getElementsByName(\"date\")[0].value\n          };\n          axios.post(\"/api/v1/admin/create_task\", newTask, {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n            alert('Succesfully assigned new task');\n            console.log(newTask);\n            this.reloadPage();\n          }).catch(console.error);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 33\n        }\n      }, \"Assign\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.deleteModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        className: \"modal-add-user\",\n        style: {\n          display: this.state.deleteModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 33\n        }\n      }, \"Delete Task?\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 33\n        }\n      }, \"Are you sure you want to delete this task?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 33\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.deleteTask(this.state.assigneeID);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 33\n        }\n      }, \"Delete\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 22\n        }\n      }, \"Task Management\"), /*#__PURE__*/React.createElement(Nav, {\n        variant: \"pills\",\n        defaultActiveKey: \"#\",\n        className: \"navigation-tab-menu\",\n        style: {\n          position: 'absolute',\n          left: ' 50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }\n      }, \"Assignees List\")), /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        onClick: this.toggleModalDisplay,\n        eventKey: \"link-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }\n      }, \"Assign task\", /*#__PURE__*/React.createElement(\"img\", {\n        src: add,\n        alt: \"add\",\n        style: {\n          width: '16px',\n          height: '16px',\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 102\n        }\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"section-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        defaultActiveKey: \"#link1\",\n        style: {\n          width: '60%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TaskUsers, {\n        getID: this.getUserID,\n        openTasks: open,\n        toggleMod: this.toggleListsDisplay,\n        taskUsers: this.state.Users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 18\n        }\n      })))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      id: \"spinner\",\n      animation: \"grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/TaskView.js"],"names":["React","done","Nav","Modal","Button","Form","Spinner","ListGroup","Popover","OverlayTrigger","InputGroup","DropdownButton","Dropdown","FormControl","add","trash","axios","TaskUsers","open","TaskView","Component","state","modalDisplay","isLoaded","deleteModalDisplay","tasksList","tasks","Users","projects","assignee","assigneeID","assigneeChosen","projectName","assigneeName","getUsersRequest","get","headers","localStorage","getItem","getTasksRequest","getProjectsRequest","toggleDeleteModal","setState","toggleModalDisplay","toggleListsDisplay","reloadPage","props","loadPage","window","location","reload","deleteTask","id","delete","then","res","alert","catch","err","console","log","getUserID","userName","componentDidMount","all","spread","responses","data","errors","setItem","render","UserTasks","filter","task","userAssigned","toLowerCase","popover","display","fontSize","padding","border","color","borderRadius","margin","complete","length","reverse","map","_id","marginBottom","cursor","alignContent","width","textDecoration","description","position","right","Prepend","project","user","username","fullname","newTask","document","getElementsByName","value","dueDate","post","error","left","height","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../shared/TaskView.css';\nimport done from './TaskView/done.png';\nimport {Nav,\n         Modal,\n         Button, \n         Form, \n         Spinner , \n         ListGroup, \n         Popover, \n         OverlayTrigger,\n         InputGroup, \n         DropdownButton, \n         Dropdown, \n         FormControl} from 'react-bootstrap';\nimport add from './TaskView/add.png';\nimport trash from './shared/trash.png';\nimport axios from 'axios';\nimport TaskUsers from './TaskView/TaskUsers';\nimport open from '../shared/open-menu.png';\n\n\nexport default class TaskView extends React.Component{\n    state = {\n        modalDisplay: 'none',\n        isLoaded: false,\n        deleteModalDisplay: 'none',\n        tasksList: 'none',\n        tasks: [],\n        Users: [],\n        projects: [],\n        assignee: [],\n        assigneeID: '',\n        assigneeChosen: '',\n        projectName: 'Project',\n        assigneeName: 'Task Assignee',\n        getUsersRequest: axios.get(\"/api/v1/admin/assigned_tasks\",  {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }),\n        getTasksRequest: axios.get(\"/api/v1/admin/get_users\",  {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }),\n        getProjectsRequest: axios.get(\"/api/v1/admin/get_projects\",  {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          })\n    }\n\n    componentDidMount() {\n         axios.all([this.state.getUsersRequest, this.state.getTasksRequest,this.state.getProjectsRequest]).then(axios.spread((...responses) => {\n            this.setState({\n                isLoaded: true,\n                tasks: responses[0].data,\n                Users: responses[1].data,\n                projects: responses[2].data\n            })            // use/access the results \n          })).catch(errors => {\n            // react on errors.\n            return errors\n          })\n\n          localStorage.setItem(\"page\", \"tasks\");     \n    }\n\n   \n\n\n    toggleDeleteModal = () => {\n        this.state.deleteModalDisplay === 'none' ? this.setState({deleteModalDisplay: 'block'}) : this.setState({deleteModalDisplay: 'none'})\n    }\n\n    toggleModalDisplay = () => {\n        this.state.modalDisplay === 'none' ? this.setState({modalDisplay: 'block'}) : this.setState({modalDisplay: 'none'})\n        \n    }\n\n    toggleListsDisplay = () => {\n        this.state.tasksList === 'none' ? this.setState({tasksList: 'block'}) : this.setState({ tasksList: 'none'})\n        \n    }\n\n    reloadPage = () => {\n\n        this.props.loadPage('tasks');\n        window.location.reload()\n    }\n\n    deleteTask = (id) => {\n        axios.delete(\"/api/v1/admin/delete_task/\" + id,{\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n             alert(res);\n             this.reloadPage()\n\n          }).catch(err => console.log(err))\n    }\n\n    getUserID = (userName) =>{\n        this.setState({\n           assigneeChosen: userName\n        })\n        return userName\n    }\n\n\n    \n\n    render(){\n        if(this.state.isLoaded){\n         const UserTasks = this.state.tasks.filter(task => {\n            return task.userAssigned.toLowerCase() === this.state.assigneeChosen.toLowerCase()\n          }); \n         const popover = (\n            <Popover id=\"popover-basic\">\n              <Popover.Title as=\"h3\">Popover right</Popover.Title>\n              <Popover.Content>\n                And here's some <strong>amazing</strong> content. It's very engaging.\n                right?\n              </Popover.Content>\n            </Popover>\n          );\n            return(\n                <>\n\n                    {/* user tasks modal */}\n                    <div className=\"modal-bg\" style={{\n                            display: this.state.tasksList\n                        }}>\n                        <Modal.Dialog className=\"modal-add-user\" style={{\n                            display: this.state.tasksList\n                        }}>\n                            <Modal.Header >\n                                <Modal.Title style={{ fontSize: '18px'}}>\n                                    <span className=\"complete-tasks-nav\" style={{\n                                    padding: '8px 8px',\n                                    border: 'solid 1px green',\n                                    color: 'green',\n                                    borderRadius: '8px',\n                                    margin: '0.5rem'\n                                    }}>Completed tasks {UserTasks.filter(task => task.complete).length} </span>\n\n                            <span className=\"complete-tasks-nav\" style={{\n                                    padding: '8px 8px',\n                                    border: 'solid 1px #000',\n                                    color: '#000',\n                                    borderRadius: '8px',\n                                    margin: '0.5rem'\n                                }}>Tasks Due {UserTasks.filter(task => !task.complete).length}</span></Modal.Title>\n\n                            </Modal.Header>\n        \n                            <Modal.Body>\n                            <ListGroup>\n                                {\n                                    UserTasks.reverse().map(task => {\n                                        return (\n                                            <ListGroup.Item \n                                            key={task._id}\n                                            variant=\"light\" \n                                            style={{ \n                                                    marginBottom: '15px',\n                                                    color: '#000', \n                                                    fontSize: '16px', \n                                                    cursor: 'pointer', \n                                                    display: 'flex', \n                                                    alignContent: 'space-around'}}\n                                            onClick={() => {\n                                                console.log('does this work?')\n                                                this.setState({\n                                                    assigneeID: task._id\n                                                })\n                                            }}        \n                                                    >\n                                        <p style={{width: '60%', textDecoration: `${task.complete ? 'line-through' : 'none' }`, color: `${task.complete ? 'green' : 'black' }`}}>\n                                            {task.description}</p> \n                                        <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover}>\n                                            <img src={open} alt=\"trash\" width=\"20px\" height=\"20px\" style={{position: 'absolute', right: '65px'}}/>\n                                          </OverlayTrigger>\n                                        <img src={trash} alt=\"trash\" width=\"20px\" height=\"20px\" style={{position: 'absolute', right: '25px'}} onClick={this.toggleDeleteModal} /></ListGroup.Item>\n                                        )\n                                    })\n                                }  \n                            </ListGroup>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.toggleListsDisplay}>Close</Button>\n                            </Modal.Footer>\n                            </Modal.Dialog>\n                        </div>\n    \n\n                {/* assign tasks modal */}\n                 <div className=\"modal-bg\" style={{\n                            display: this.state.modalDisplay\n                        }}>\n                        <Modal.Dialog className=\"modal-add-user\" style={{\n                            display: this.state.modalDisplay\n                        }}>\n                            <Modal.Header >\n                                <Modal.Title>Assign Task</Modal.Title>\n                            </Modal.Header>\n        \n                            <Modal.Body>\n                            <Form>\n                               <Form.Group controlId=\"formEventName\">\n                                    <Form.Label>Project Name</Form.Label>\n                                    <DropdownButton\n                                    as={InputGroup.Prepend}\n                                    variant=\"outline-secondary\"\n                                    title={this.state.projectName}\n                                    id=\"input-group-dropdown-11\"\n                                    name=\"project\" \n                                    >\n                                        {\n                                            this.state.projects.map( project => {\n                                                return(\n                                                <Dropdown.Item key={project._id} onClick={() => {\n                                                    this.setState({\n                                                        projectName: project.projectName\n                                                    })\n                                                }} >{project.projectName}</Dropdown.Item>\n                                                )\n                                            })\n                                        }\n                                    </DropdownButton>\n                                </Form.Group>\n                            \n                                <Form.Group controlId=\"formUsername\">\n                                    <Form.Label>Username</Form.Label>\n                                    <InputGroup className=\"mb-3\">\n                                    <DropdownButton\n                                    as={InputGroup.Prepend}\n                                    variant=\"outline-secondary\"\n                                    title={this.state.assigneeName}\n                                    id=\"input-group-dropdown-1\"\n                                    name=\"assignee\"\n                                    \n                                    >\n                                        {\n                                            this.state.Users.map( user => {\n                                                return(\n                                                <Dropdown.Item key={user._id} onClick={() => {\n                                                    this.setState({\n                                                        assignee: user.username,\n                                                        assigneeName: user.fullname,\n                                                        assigneeID: user._id\n                                                    })\n                                                }} >{user.fullname}</Dropdown.Item>\n                                                )\n                                            })\n                                        }\n                                    </DropdownButton>\n                                    <FormControl aria-describedby=\"basic-addon1\" />\n                                </InputGroup>\n                                </Form.Group>\n    \n                                <Form.Group controlId=\"formUsername\">\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control name=\"taskdetails\" as=\"textarea\" rows=\"4\" placeholder=\"write task details\" />\n                                </Form.Group>\n        \n                                <Form.Group controlId=\"formUsername\">\n                                    <Form.Label>Due date</Form.Label>\n                                    <Form.Control name=\"date\" as=\"textarea\" rows=\"4\" placeholder=\"e.g DD/MM/YY\" />\n                                </Form.Group>\n        \n                                </Form>\n                            </Modal.Body>\n    \n                              <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.toggleModalDisplay}>Close</Button>\n                                <Button variant=\"primary\" onClick={() => {\n                                    console.log('assigning....');\n                                    const newTask = {\n                                        projectName: this.state.projectName,\n                                        userAssigned: this.state.assignee,\n                                        description:   document.getElementsByName(\"taskdetails\")[0].value,\n                                        dueDate: document.getElementsByName(\"date\")[0].value\n                                    }\n\n                                    axios.post(\"/api/v1/admin/create_task\", newTask, {\n                                        headers: {\n                                        'auth-token': `${localStorage.getItem('auth-token')}`\n                                        }\n                                    })\n                                    .then( res => {\n                                        alert('Succesfully assigned new task');\n                                        console.log(newTask)\n                                        this.reloadPage();\n\n                                    })\n                                    .catch(console.error)\n                                  \n                                }}>Assign</Button>\n                            </Modal.Footer>\n                            </Modal.Dialog>\n                        </div>\n    \n                        <div className=\"modal-bg\" style={{\n                            display: this.state.deleteModalDisplay\n                                }}>\n                             \n                            <Modal.Dialog  className=\"modal-add-user\" style={{\n                            display: this.state.deleteModalDisplay\n                                }}>\n                            <Modal.Header >\n                                <Modal.Title>Delete Task?</Modal.Title>\n                            </Modal.Header>\n        \n                            <Modal.Body>\n                                <p>Are you sure you want to delete this task?</p>\n                            </Modal.Body>\n        \n                            <Modal.Footer>\n                                <Button variant=\"secondary\" onClick={this.toggleDeleteModal}>Cancel</Button>\n                                <Button variant=\"primary\" onClick={() => {\n                                    this.deleteTask(this.state.assigneeID)\n                                    \n                                    }}>Delete</Button>\n                            </Modal.Footer>\n                            </Modal.Dialog>\n                      \n                             </div>  \n    \n                 <div className=\"container\">\n                     <h2 id=\"page-title\">Task Management</h2>\n                     <Nav variant=\"pills\" defaultActiveKey=\"#\" className=\"navigation-tab-menu\" style={{position: 'absolute', left:' 50px'}}>\n                        <Nav.Item>\n                            <Nav.Link href=\"#\">Assignees List</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link onClick={this.toggleModalDisplay} eventKey=\"link-1\">Assign task<img src={add} alt=\"add\" style={{width: '16px', height: '16px', marginLeft: '5px'}}/></Nav.Link>\n                        </Nav.Item>\n                        </Nav>\n                        <br />\n                <section className=\"section-container\">\n                <ListGroup  defaultActiveKey=\"#link1\" style={{\n                    width: '60%',\n                    height: '100%'\n                }}>\n                 <TaskUsers getID={this.getUserID} openTasks={open} toggleMod={this.toggleListsDisplay} taskUsers={this.state.Users} />\n                 </ListGroup>\n                </section>\n    \n            \n                      \n                    \n                 </div>\n                </>\n            )\n        }\n        return (\n            <div className=\"spinner-bg\">\n                <Spinner id=\"spinner\" animation=\"grow\" />\n            </div>\n            );\n    }\n}"]},"metadata":{},"sourceType":"module"}