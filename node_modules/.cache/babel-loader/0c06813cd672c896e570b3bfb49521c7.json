{"ast":null,"code":"var _jsxFileName = \"/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/UserManagementView.js\";\nimport React from 'react';\nimport './UserManagementView/UserManagement.css';\nimport { Spinner, Table, Nav, Modal, Button, Form } from 'react-bootstrap';\nimport trash from './shared/trash.png';\nimport edit from '../shared/edit.png';\nimport add from './UserManagementView/signs.png';\nimport axios from 'axios';\nexport default class UserManagement extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalDisplay: 'none',\n      isLoaded: false,\n      deleteModalDisplay: 'none',\n      navigation: 'view',\n      editSave: 'none',\n      users: [],\n      deleteUserId: '',\n      deleteBtnClicked: false,\n      addBtnClicked: false,\n      saveBtnClicked: false,\n      editBtnClicked: false,\n      editModal: 'none',\n      editFieldID: '',\n      editFieldIndex: 0\n    };\n\n    this.toggleModalDisplay = () => {\n      this.state.modalDisplay === 'none' ? this.setState({\n        modalDisplay: 'block'\n      }) : this.setState({\n        modalDisplay: 'none'\n      });\n    };\n\n    this.toggleDeleteModal = () => {\n      this.state.deleteModalDisplay === 'none' ? this.setState({\n        deleteModalDisplay: 'block'\n      }) : this.setState({\n        deleteModalDisplay: 'none'\n      });\n    };\n\n    this.toggleSave = () => {\n      this.state.editSave === 'none' ? this.setState({\n        editSave: 'block'\n      }) : this.setState({\n        editSave: 'none'\n      });\n    };\n\n    this.toggleEditModalDisplay = () => {\n      this.state.editModal === 'none' ? this.setState({\n        editModal: 'block'\n      }) : this.setState({\n        editModal: 'none'\n      });\n    };\n\n    this.getEditField = id => {\n      const field = this.state.users.filter(report => report._id === id);\n      return field;\n    };\n\n    this.onEditClick = () => {\n      this.setState({\n        navigation: 'edit'\n      }, () => {\n        this.toggleSave();\n      });\n    };\n\n    this.returnEditFields = placeHolder => {\n      return /*#__PURE__*/React.createElement(Form.Control, {\n        style: {\n          width: '300px'\n        },\n        className: \"edit-fields\",\n        type: \"text\",\n        placeholder: placeHolder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.addUser = async () => {\n      const user = {\n        fullname: document.getElementsByName('fullname')[0].value,\n        username: document.getElementsByName('username')[0].value,\n        email: document.getElementsByName('email')[0].value,\n        password: document.getElementsByName('password')[0].value\n      };\n\n      try {\n        axios.post(\"/api/v1/register_user\", user).then(res => {\n          console.log('succesfully created user ' + res);\n          alert('Succesfully added a new user');\n          this.setState({\n            modalDisplay: 'none'\n          });\n          this.reloadPage();\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.saveEditedFied = async id => {\n      console.log('saving...');\n      this.setState({\n        editBtnClicked: 1\n      });\n\n      try {\n        const edits = await Array.from(document.getElementsByClassName('edit-forms')[0]).map(node => node);\n        const saveEdits = {\n          fullname: edits[0].value.length < 1 ? edits[0].getAttribute('placeholder') : edits[0].value,\n          username: edits[1].value.length < 1 ? edits[1].getAttribute('placeholder') : edits[1].value,\n          email: edits[2].value.length < 1 ? edits[2].getAttribute('placeholder') : edits[2].value\n        }; // console.log(saveEdits)\n\n        axios.post(`/api/v1/admin/edit_user/${id}`, saveEdits, {\n          headers: {\n            'auth-token': `${localStorage.getItem('auth-token')}`\n          }\n        }).then(res => {\n          alert(\"Succesfully saved your changes\");\n          console.log(res);\n          this.toggleEditModalDisplay();\n          this.reloadPage();\n        }).catch(err => console.log(err));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.reloadPage = () => {\n      window.location.reload();\n    };\n\n    this.removeUser = async id => {\n      try {\n        axios.delete(\"/api/v1/admin/delete_user/\" + id, {\n          headers: {\n            'auth-token': `${localStorage.getItem('auth-token')}`\n          }\n        }).then(res => {\n          console.log('succesfully deleted user ' + res);\n          alert('Succesfully deleted user');\n          this.toggleDeleteModal();\n          this.reloadPage();\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.editUser = async (editId, edits) => {\n      try {\n        axios.post(\"/api/v1/admin/edit_user/\" + editId, edits, {\n          headers: {\n            'auth-token': `${localStorage.getItem('auth-token')}`\n          }\n        }).then(res => {\n          console.log('succesfully edited user ' + res.data);\n          alert('Saved changes!');\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/v1/admin/get_users', {\n      headers: {\n        'auth-token': `${localStorage.getItem('auth-token')}`\n      }\n    }).then(res => {\n      this.setState({\n        isLoaded: true,\n        users: res.data\n      });\n    }).catch(err => {\n      console.log('error getting users' + err);\n    });\n    localStorage.setItem(\"page\", \"user-management\");\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      const deleteBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.setState({\n            deleteBtnClicked: true\n          });\n          this.removeUser(this.state.deleteUserId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 31\n        }\n      }, \"Delete\");\n      const loadingDeleteBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 53\n        }\n      }), \"Deleting...\");\n      const addBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.addUser();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 28\n        }\n      }, \"Add\");\n      const loadingAddBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 53\n        }\n      }), \"Adding...\");\n      const saveBtn = /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 29\n        }\n      }, \"Save\");\n      const loadSave = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 49\n        }\n      }), \"Saving...\");\n      const editedRecords = Array.from(document.getElementsByClassName('user-rows')).map(editedrecords => {\n        return editedrecords.cells;\n      }); //  const getUpdatedRecords = () => {\n      //      const updated = editedRecords.filter( record => {\n      //      })\n      //  }\n      //save the changes made\n\n      const saveUpdates = async () => {\n        try {\n          const edits = await editedRecords;\n          this.state.editSave === 'block' ? // this.setState({\n          //     saveBtnClicked: true\n          // })\n          editedRecords.map(record => {\n            console.log({\n              fullname: record[1].innerText,\n              username: record[2].innerText,\n              email: record[3].innerText\n            });\n          }) : console.log('edit not active');\n        } catch (err) {\n          return err;\n        }\n      };\n\n      const saveLoadingBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }), \"Saving...\");\n      const saveEditBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.saveEditedFied(this.state.editFieldID);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 33\n        }\n      }, \"Save\");\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"user-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, \"USER MANAGEMENT\"), /*#__PURE__*/React.createElement(Nav, {\n        variant: \"pills\",\n        className: \"navigation-tab\",\n        defaultActiveKey: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            editSave: 'none'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }\n      }, \"View users\")), /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        eventKey: \"link-1\",\n        onClick: () => {\n          this.setState({\n            modalDisplay: 'block',\n            editSave: 'none'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }\n      }, \"Add user\", /*#__PURE__*/React.createElement(\"img\", {\n        src: add,\n        alt: \"add\",\n        style: {\n          width: '16px',\n          height: '16px',\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 36\n        }\n      }))), /*#__PURE__*/React.createElement(Nav.Item, {\n        id: \"save\",\n        style: {\n          display: this.state.editSave\n        },\n        onClick: async () => {\n          this.setState({\n            saveBtnClicked: true\n          });\n          console.log(await Promise.all([saveUpdates()]));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }\n      }, !this.state.saveBtnClicked ? saveBtn : loadSave)), /*#__PURE__*/React.createElement(Table, {\n        className: \"user-table\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }\n      }, \"Full Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, \"Email\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, this.state.users.map((user, index) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n          key: user._id,\n          src: edit,\n          style: {\n            marginLeft: '-15px'\n          },\n          width: \"32px\",\n          height: \"32px\",\n          className: \"delete-icon\",\n          onClick: () => {\n            this.setState({\n              editFieldID: user._id,\n              editFieldIndex: index\n            });\n            this.toggleEditModalDisplay();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 34\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          key: user._id,\n          src: trash,\n          className: \"delete-icon\",\n          onClick: () => {\n            this.toggleDeleteModal();\n            this.setState({\n              deleteUserId: user._id\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"tr\", {\n          key: user._id,\n          className: \"user-rows\",\n          identifier: user._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 37\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 37\n          }\n        }, this.state.editSave === 'none' ? user.fullname : this.returnEditFields(user.fullname)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 37\n          }\n        }, this.state.editSave === 'none' ? user.username : this.returnEditFields(user.username)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 37\n          }\n        }, this.state.editSave === 'none' ? user.email : this.returnEditFields(user.email))));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.modalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        className: \"modal-add-user\",\n        style: {\n          display: this.state.modalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }\n      }, \"Add User (max. 20 users)\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formFullName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 33\n        }\n      }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"fullname\",\n        type: \"textbox\",\n        placeholder: \"Enter name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formUsername\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 33\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"username\",\n        type: \"textbox\",\n        placeholder: \"Enter username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 33\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"email\",\n        type: \"textbox\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 33\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 29\n        }\n      }, \"Close\"), !this.state.addBtnClicked ? addBtn : loadingAddBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.deleteModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        className: \"modal-add-user\",\n        style: {\n          display: this.state.deleteModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }\n      }, \"Delete User?\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 29\n        }\n      }, \"Are you sure you want to delete this user?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), !this.state.deleteBtnClicked ? deleteBtn : loadingDeleteBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.editModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.editModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 29\n        }\n      }, \"Edit Field\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"edit-forms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"fullname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 33\n        }\n      }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.fullname),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 33\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.username),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 33\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.email),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleEditModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), this.state.editBtnClicked < 1 ? saveEditBtn : saveLoadingBtn))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      id: \"spinner\",\n      animation: \"grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/UserManagementView.js"],"names":["React","Spinner","Table","Nav","Modal","Button","Form","trash","edit","add","axios","UserManagement","Component","state","modalDisplay","isLoaded","deleteModalDisplay","navigation","editSave","users","deleteUserId","deleteBtnClicked","addBtnClicked","saveBtnClicked","editBtnClicked","editModal","editFieldID","editFieldIndex","toggleModalDisplay","setState","toggleDeleteModal","toggleSave","toggleEditModalDisplay","getEditField","id","field","filter","report","_id","onEditClick","returnEditFields","placeHolder","width","addUser","user","fullname","document","getElementsByName","value","username","email","password","post","then","res","console","log","alert","reloadPage","catch","err","saveEditedFied","edits","Array","from","getElementsByClassName","map","node","saveEdits","length","getAttribute","headers","localStorage","getItem","window","location","reload","removeUser","delete","editUser","editId","data","componentDidMount","get","setItem","render","deleteBtn","loadingDeleteBtn","addBtn","loadingAddBtn","saveBtn","loadSave","editedRecords","editedrecords","cells","saveUpdates","record","innerText","saveLoadingBtn","saveEditBtn","height","marginLeft","display","Promise","all","index","maxHeight","overflowY"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './UserManagementView/UserManagement.css';\nimport {Spinner, Table, Nav, Modal, Button,Form} from 'react-bootstrap';\nimport trash from './shared/trash.png';\nimport edit from '../shared/edit.png';\nimport add from './UserManagementView/signs.png';\nimport axios from 'axios';\n\nexport default class UserManagement extends React.Component{\n    state = {\n        modalDisplay: 'none',\n        isLoaded: false,\n        deleteModalDisplay: 'none',\n        navigation: 'view',\n        editSave: 'none',\n        users: [],\n        deleteUserId: '',\n        deleteBtnClicked: false,\n        addBtnClicked: false,\n        saveBtnClicked: false,\n        editBtnClicked: false,\n        editModal: 'none',\n        editFieldID: '',\n        editFieldIndex: 0\n    }\n\n    componentDidMount() {\n        axios.get('/api/v1/admin/get_users', {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          })\n        .then(res => {\n            this.setState({\n                isLoaded: true,\n                users: res.data\n            });\n        }).catch(err => {\n            console.log('error getting users' + err)\n        });\n\n\n        localStorage.setItem(\"page\", \"user-management\");\n    }\n\n    toggleModalDisplay = () => {\n        this.state.modalDisplay === 'none' ? this.setState({modalDisplay: 'block'}) : this.setState({modalDisplay: 'none'})\n        \n    }\n\n    toggleDeleteModal = () => {\n        this.state.deleteModalDisplay === 'none' ? this.setState({deleteModalDisplay: 'block'}) : this.setState({deleteModalDisplay: 'none'})\n    }\n\n    toggleSave = () => {\n        this.state.editSave === 'none' ? this.setState({editSave: 'block'}) : this.setState({editSave: 'none'})\n    }\n\n    toggleEditModalDisplay = () => {\n        this.state.editModal === 'none' ? this.setState({editModal: 'block'}) : this.setState({editModal: 'none'})\n\n    }\n\n    getEditField = (id ) => {\n        const field = this.state.users.filter(report => report._id === id);\n        return field;\n    }\n\n    onEditClick = () => {\n        this.setState({\n            navigation: 'edit'\n        }, () => {\n            this.toggleSave();\n        })\n    }\n\n    returnEditFields = (placeHolder) => {\n        return(\n            <Form.Control style={{width: '300px'}} className=\"edit-fields\" type=\"text\" placeholder={placeHolder}></Form.Control>\n        )\n    }\n\n    addUser = async () => {\n            const user = {\n                fullname: document.getElementsByName('fullname')[0].value, \n                username: document.getElementsByName('username')[0].value,\n                email: document.getElementsByName('email')[0].value,\n                password: document.getElementsByName('password')[0].value   \n            }\n            try{\n                axios.post(\"/api/v1/register_user\", user)\n                .then(res => {\n                    console.log('succesfully created user ' + res)\n                    alert('Succesfully added a new user');\n                    this.setState({\n                        modalDisplay: 'none'\n                    });\n                    this.reloadPage();\n                }).catch (err => { console.log(err)})\n        } catch (err) {console.log(err)}\n    } \n\n\n\n    saveEditedFied = async (id) => {\n        console.log('saving...')\n        this.setState({\n            editBtnClicked: 1\n        })\n       try{\n\n        const edits = await Array.from(document.getElementsByClassName('edit-forms')[0]).map(node => node)\n       \n        const saveEdits = {\n            fullname:  edits[0].value.length < 1 ? edits[0].getAttribute('placeholder') : edits[0].value, \n            username:  edits[1].value.length < 1 ? edits[1].getAttribute('placeholder') : edits[1].value, \n            email:  edits[2].value.length < 1 ? edits[2].getAttribute('placeholder') :    edits[2].value\n        }\n\n        // console.log(saveEdits)\n        axios.post(`/api/v1/admin/edit_user/${id}`, saveEdits, {\n            headers: {\n                'auth-token': `${localStorage.getItem('auth-token')}`\n              }\n        }).then(res => {\n            alert(\"Succesfully saved your changes\");     \n                console.log(res);\n                this.toggleEditModalDisplay();\n                this.reloadPage();\n        }).catch(err => console.log(err))\n       } catch(err) {console.log(err)}\n    }\n\n    reloadPage = () => {\n        window.location.reload()\n    }\n\n    removeUser = async (id) => {\n            try{\n                axios.delete(\"/api/v1/admin/delete_user/\" + id,  {\n                    headers: {\n                    'auth-token': `${localStorage.getItem('auth-token')}`\n                    }\n                })\n                .then(res => {\n                    console.log('succesfully deleted user ' + res)\n                    alert('Succesfully deleted user');\n                    this.toggleDeleteModal();\n                    this.reloadPage();\n                }).catch (err => { console.log(err)})\n        } catch (err) {console.log(err)}\n    }\n\n    editUser = async (editId, edits) => {\n        try{\n            axios.post(\"/api/v1/admin/edit_user/\" + editId, edits, {   headers: {\n                'auth-token': `${localStorage.getItem('auth-token')}`\n                }\n            })\n            .then( res => {\n                console.log('succesfully edited user ' + res.data)\n                alert('Saved changes!');\n            })\n        } catch (err) {console.log(err)}\n    }\n \n    render(){\n        if(this.state.isLoaded) {\n\n            const deleteBtn = <Button variant=\"primary\" onClick={() => {\n                                    this.setState({\n                                        deleteBtnClicked: true\n                                    })\n                                    this.removeUser(this.state.deleteUserId)\n                                }}>Delete</Button>;\n           \n           const loadingDeleteBtn = <Button variant=\"primary\" disabled>\n                                                    <Spinner\n                                                        as=\"span\"\n                                                        animation=\"grow\"\n                                                        size=\"sm\"\n                                                        role=\"status\"\n                                                        aria-hidden=\"true\"\n                                                    />\n                                                    Deleting...\n                                                </Button> ;\n\n\n            const addBtn = <Button variant=\"primary\" onClick={() => {this.addUser()}}>Add</Button>;\n          \n            const loadingAddBtn = <Button variant=\"primary\" disabled>\n                                                    <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                    />\n                                                    Adding...\n                                                </Button>;\n\n            const saveBtn = <Button>Save</Button>;\n            const loadSave = <Button variant=\"primary\" disabled>\n                                                <Spinner\n                                                as=\"span\"\n                                                animation=\"grow\"\n                                                size=\"sm\"\n                                                role=\"status\"\n                                                aria-hidden=\"true\"\n                                                />\n                                                Saving...\n                                            </Button>;\n\n            const editedRecords = Array.from(document.getElementsByClassName('user-rows')).map( editedrecords => {\n                return editedrecords.cells\n             }); \n\n            //  const getUpdatedRecords = () => {\n            //      const updated = editedRecords.filter( record => {\n\n            //      })\n            //  }\n\n            //save the changes made\n            const saveUpdates = async () => {\n                try{\n                    const edits = await editedRecords;\n                    this.state.editSave === 'block' ? \n                    // this.setState({\n                    //     saveBtnClicked: true\n                    // })\n                    editedRecords.map(record => {\n                        console.log({\n                            fullname: record[1].innerText,\n                            username: record[2].innerText,\n                            email: record[3].innerText\n                        })\n                    })\n                    :\n                     console.log('edit not active')\n                    \n                } catch (err) { return err}\n            }\n\n            const saveLoadingBtn =  <Button variant=\"primary\" disabled>\n            <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            />\n            Saving...\n            </Button>;\n\n            const saveEditBtn = <Button variant=\"primary\" onClick={() => {\n              this.saveEditedFied(this.state.editFieldID) \n            }}>\n            Save\n            </Button>;\n\n            return(\n                <>\n                <h2 className=\"user-title\">USER MANAGEMENT</h2>\n                <Nav variant=\"pills\" className=\"navigation-tab\" defaultActiveKey=\"#\">\n                    <Nav.Item >\n                        <Nav.Link href=\"#\" onClick={ () => {\n                                this.setState({\n                                    editSave: 'none'\n                                })\n                                }}>View users</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"link-1\" onClick={() => {\n                            this.setState({\n                                modalDisplay: 'block',\n                                editSave: 'none'\n                            })\n                        }}>Add user<img src={add} alt=\"add\" style={{width: '16px', height: '16px', marginLeft: '5px'}}/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item id=\"save\" style={{\n                        display: this.state.editSave\n                    }}\n                    onClick={ async () => {\n                        this.setState({\n                            saveBtnClicked: true\n                        })\n                        console.log(await Promise.all([saveUpdates()])); \n                    }}\n                    >\n                        {!this.state.saveBtnClicked ? saveBtn : loadSave}\n                    </Nav.Item>\n                </Nav>\n                <Table className=\"user-table\" striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>Full Name</th>\n                        <th>Username</th>\n                        <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.users.map((user,index) => {\n                                return(\n                                <>\n                                 <img  key={user._id} src={edit} style={{marginLeft: '-15px'}} width=\"32px\" height=\"32px\" className=\"delete-icon\" \n                                        onClick={() => {\n                                            this.setState({\n                                                editFieldID: user._id,\n                                                editFieldIndex: index\n                                            });\n                                            this.toggleEditModalDisplay()\n                                            }}/> \n                                  <img  key={user._id} src={trash} className=\"delete-icon\" onClick={() => {\n                                    this.toggleDeleteModal();\n                                    this.setState({\n                                        deleteUserId: user._id\n                                        });\n                                    }}/>\n                                    <tr key={user._id} className=\"user-rows\" identifier={user._id} >\n                                    <td>{index + 1}</td>\n                                    <td>{this.state.editSave === 'none' ? user.fullname : this.returnEditFields(user.fullname)}</td>\n                                    <td>{this.state.editSave === 'none' ? user.username : this.returnEditFields(user.username)}</td>\n                                    <td>{this.state.editSave === 'none' ? user.email : this.returnEditFields(user.email)}</td>\n                                    </tr>\n                                </>\n                                )\n                            })\n                        }\n                    </tbody>\n                    </Table>\n                    <div className=\"modal-bg\" style={{\n                        display: this.state.modalDisplay\n                    }}>\n                    <Modal.Dialog className=\"modal-add-user\" style={{\n                        display: this.state.modalDisplay\n                    }}>\n                        <Modal.Header >\n                            <Modal.Title>Add User (max. 20 users)</Modal.Title>\n                        </Modal.Header>\n    \n                        <Modal.Body>\n                        <Form>\n                            <Form.Group controlId=\"formFullName\">\n                                <Form.Label>Full Name</Form.Label>\n                                <Form.Control name=\"fullname\" type=\"textbox\" placeholder=\"Enter name\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formUsername\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control name=\"username\" type=\"textbox\" placeholder=\"Enter username\" />\n                            </Form.Group>\n    \n\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name=\"email\" type=\"textbox\" placeholder=\"Password\" />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </Form.Group>\n\n                            </Form>\n                        </Modal.Body>\n    \n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.toggleModalDisplay}>Close</Button>\n                            {\n                                !this.state.addBtnClicked ? addBtn : loadingAddBtn\n                            }\n                        </Modal.Footer>\n                        </Modal.Dialog>\n\n                    </div>\n                    \n                       \n                     <div className=\"modal-bg\" style={{\n                        display: this.state.deleteModalDisplay\n                            }}>\n                         \n                        <Modal.Dialog  className=\"modal-add-user\" style={{\n                        display: this.state.deleteModalDisplay\n                            }}>\n                        <Modal.Header >\n                            <Modal.Title>Delete User?</Modal.Title>\n                        </Modal.Header>\n    \n                        <Modal.Body>\n                            <p>Are you sure you want to delete this user?</p>\n                        </Modal.Body>\n    \n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.toggleDeleteModal}>Cancel</Button>\n                            {\n                               !this.state.deleteBtnClicked ?  deleteBtn : loadingDeleteBtn\n                            }\n                        </Modal.Footer>\n                        </Modal.Dialog>\n                         </div>  \n\n                               {/* edit user modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.editModal\n                }}>\n                    <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                        display: this.state.editModal\n                    }}>\n                        <Modal.Header >\n                            <Modal.Title>Edit Field</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                         <Form className=\"edit-forms\">\n                            <Form.Group controlId=\"fullname\">\n                                <Form.Label>Full Name</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.fullname)} />\n                            </Form.Group>    \n\n                            <Form.Group controlId=\"username\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.username)} />\n                            </Form.Group>    \n\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.email)}/>\n                            </Form.Group>                       \n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.toggleEditModalDisplay}>Cancel</Button>\n                            {\n                                this.state.editBtnClicked < 1 ? saveEditBtn : saveLoadingBtn\n                            }\n                        </Modal.Footer>\n                        </Modal.Dialog>\n                </div> \n                </>\n            )\n        }\n\n        return (\n        <div className=\"spinner-bg\">\n            <Spinner id=\"spinner\" animation=\"grow\" />\n        </div>\n        );\n       \n    }\n}"]},"metadata":{},"sourceType":"module"}