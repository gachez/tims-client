{"ast":null,"code":"var _jsxFileName = \"/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/AnalyticsView.js\";\nimport React from 'react';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport './AnalyticsView/AnalyticsView.css';\nimport CanvasJSReact from './AnalyticsView/canvasjs.react';\nimport axios from 'axios';\nimport { Spinner } from 'react-bootstrap';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class AnalyticsView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoaded: false,\n      project: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`/api/v1/admin/get_projects/${localStorage.getItem('id')}`, {\n      headers: {\n        'auth-token': `${localStorage.getItem('auth-token')}`\n      }\n    }).then(res => {\n      this.setState({\n        isLoaded: true,\n        project: res.data\n      });\n    }).catch(err => console.log(err));\n    localStorage.setItem(\"page\", \"analytics\");\n  }\n\n  render() {\n    const options = {\n      title: {\n        text: \"Tasks Analytics\"\n      },\n      data: [{\n        type: \"column\",\n        dataPoints: [{\n          label: \"Jan\",\n          y: 10\n        }, {\n          label: \"Feb\",\n          y: 15\n        }, {\n          label: \"March\",\n          y: 25\n        }, {\n          label: \"April\",\n          y: 30\n        }, {\n          label: \"May\",\n          y: 28\n        }, {\n          label: \"June\",\n          y: 26\n        }, {\n          label: \"July\",\n          y: 60\n        }]\n      }]\n    };\n    const usersCountArr = this.state.project.usersAssigned;\n    const KPIs = [{\n      title: \"Users\",\n      amount: 4\n    }, {\n      title: \"Tasks Assigned\",\n      amount: 30\n    }, {\n      title: \"Tasks Submitted\",\n      amount: 111\n    }, {\n      title: \"Companies Recorded\",\n      amount: 1000\n    }, {\n      title: \"Confirmed\",\n      amount: 330\n    }, {\n      title: \"Pending\",\n      amount: 100\n    }, {\n      title: \"Reports Submitted\",\n      amount: 20\n    }];\n\n    if (this.state.isLoaded) {\n      console.log(this.state.project);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Analytics (\", this.state.project.projectName, \")\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(CardDeck, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, KPIs.map(kpm => {\n        return /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }\n        }, kpm.title), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        }, kpm.amount))));\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      id: \"spinner\",\n      animation: \"grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }));\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/AnalyticsView.js"],"names":["React","Card","CardDeck","CanvasJSReact","axios","Spinner","CanvasJS","CanvasJSChart","AnalyticsView","Component","state","isLoaded","project","componentDidMount","get","localStorage","getItem","headers","then","res","setState","data","catch","err","console","log","setItem","render","options","title","text","type","dataPoints","label","y","usersCountArr","usersAssigned","KPIs","amount","projectName","map","kpm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardDeck } from 'react-bootstrap';\nimport './AnalyticsView/AnalyticsView.css';\nimport CanvasJSReact from './AnalyticsView/canvasjs.react';\nimport axios from 'axios';\nimport {Spinner} from 'react-bootstrap';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n\n\nexport default class AnalyticsView extends React.Component{\n    state = {\n        isLoaded: false,\n        project: []\n    }\n\n    componentDidMount() {\n        axios.get(`/api/v1/admin/get_projects/${ localStorage.getItem('id')}` ,  {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n\n            this.setState({\n                isLoaded: true,\n                project: res.data\n            })\n          }).catch(err => console.log(err));\n    \n          localStorage.setItem(\"page\", \"analytics\")\n        }\n\n  \n\n    render() {\n        const options = {\n\t\t\ttitle: {\n\t\t\t\ttext: \"Tasks Analytics\"\n\t\t\t},\n\t\t\tdata: [\n\t\t\t{\n\t\t\t\ttype: \"column\",\n\t\t\t\tdataPoints: [\n\t\t\t\t\t{ label: \"Jan\",  y: 10  },\n\t\t\t\t\t{ label: \"Feb\", y: 15  },\n\t\t\t\t\t{ label: \"March\", y: 25  },\n\t\t\t\t\t{ label: \"April\",  y: 30  },\n                    { label: \"May\",  y: 28  },\n                    { label: \"June\",  y: 26  },\n                    { label: \"July\",  y: 60  }\n\n\t\t\t\t]\n\t\t\t}\n\t\t\t]\n        }\n     \n        const usersCountArr = this.state.project.usersAssigned\n        \nconst KPIs = [\n    {\n        title: \"Users\",\n        amount: 4\n    },\n    {\n        title: \"Tasks Assigned\",\n        amount: 30\n    },\n    {\n        title: \"Tasks Submitted\",\n        amount: 111\n    },\n    {\n        title: \"Companies Recorded\",\n        amount: 1000\n    },\n    {\n        title: \"Confirmed\",\n        amount: 330\n    },\n    {\n        title: \"Pending\",\n        amount: 100\n    },\n    {\n        title: \"Reports Submitted\",\n        amount: 20\n    }\n];\n\n\n        if (this.state.isLoaded) {\n           console.log(this.state.project)\n            return (\n                <>\n                <div className=\"container\">\n    \n                <h2>Analytics ({this.state.project.projectName})</h2>\n                <br />\n                <br />\n                <br />\n                <CardDeck >\n                    {\n                        KPIs.map( kpm => {\n                            return(\n                                <Card>\n                                    <Card.Body>\n                                    <Card.Text>{kpm.title}</Card.Text>\n                                    <Card.Text>\n                                    <h3>{kpm.amount}</h3>\n                                    </Card.Text>\n                                    </Card.Body>\n                                </Card>\n    \n                            )\n                        })\n                    }                \n                    </CardDeck>\n                    <br />\n                    <br />\n                    <br />\n                    <CanvasJSChart options = {options}\n\t\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t\t/>\n        \n     \n                </div>\n                           </>\n            )\n        }\n       return (\n        <div className=\"spinner-bg\">\n            <Spinner id=\"spinner\" animation=\"grow\" />\n        </div>\n        );;\n    }\n}"]},"metadata":{},"sourceType":"module"}