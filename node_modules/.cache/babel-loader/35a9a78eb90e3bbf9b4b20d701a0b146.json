{"ast":null,"code":"import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.willChange !== 'auto') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static') {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","map":{"version":3,"sources":["/home/gachez/EnterpriseSystems/tims-client/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js"],"names":["getWindow","getNodeName","getComputedStyle","isHTMLElement","isTableElement","getParentNode","getTrueOffsetParent","element","position","offsetParent","getContainingBlock","currentNode","indexOf","css","transform","perspective","willChange","parentNode","getOffsetParent","window"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACpC,MAAI,CAACJ,aAAa,CAACI,OAAD,CAAd,IAA2B;AAC/BL,EAAAA,gBAAgB,CAACK,OAAD,CAAhB,CAA0BC,QAA1B,KAAuC,OADvC,EACgD;AAC9C,WAAO,IAAP;AACD;;AAED,SAAOD,OAAO,CAACE,YAAf;AACD,C,CAAC;AACF;;;AAGA,SAASC,kBAAT,CAA4BH,OAA5B,EAAqC;AACnC,MAAII,WAAW,GAAGN,aAAa,CAACE,OAAD,CAA/B;;AAEA,SAAOJ,aAAa,CAACQ,WAAD,CAAb,IAA8B,CAAC,MAAD,EAAS,MAAT,EAAiBC,OAAjB,CAAyBX,WAAW,CAACU,WAAD,CAApC,IAAqD,CAA1F,EAA6F;AAC3F,QAAIE,GAAG,GAAGX,gBAAgB,CAACS,WAAD,CAA1B,CAD2F,CAClD;AACzC;;AAEA,QAAIE,GAAG,CAACC,SAAJ,KAAkB,MAAlB,IAA4BD,GAAG,CAACE,WAAJ,KAAoB,MAAhD,IAA0DF,GAAG,CAACG,UAAJ,KAAmB,MAAjF,EAAyF;AACvF,aAAOL,WAAP;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAGA,WAAW,CAACM,UAA1B;AACD;AACF;;AAED,SAAO,IAAP;AACD,C,CAAC;AACF;;;AAGA,eAAe,SAASC,eAAT,CAAyBX,OAAzB,EAAkC;AAC/C,MAAIY,MAAM,GAAGnB,SAAS,CAACO,OAAD,CAAtB;AACA,MAAIE,YAAY,GAAGH,mBAAmB,CAACC,OAAD,CAAtC;;AAEA,SAAOE,YAAY,IAAIL,cAAc,CAACK,YAAD,CAA9B,IAAgDP,gBAAgB,CAACO,YAAD,CAAhB,CAA+BD,QAA/B,KAA4C,QAAnG,EAA6G;AAC3GC,IAAAA,YAAY,GAAGH,mBAAmB,CAACG,YAAD,CAAlC;AACD;;AAED,MAAIA,YAAY,IAAIR,WAAW,CAACQ,YAAD,CAAX,KAA8B,MAA9C,IAAwDP,gBAAgB,CAACO,YAAD,CAAhB,CAA+BD,QAA/B,KAA4C,QAAxG,EAAkH;AAChH,WAAOW,MAAP;AACD;;AAED,SAAOV,YAAY,IAAIC,kBAAkB,CAACH,OAAD,CAAlC,IAA+CY,MAAtD;AACD","sourcesContent":["import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.willChange !== 'auto') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static') {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}"]},"metadata":{},"sourceType":"module"}