{"ast":null,"code":"var _jsxFileName = \"/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/ReportsView.js\";\nimport React from 'react';\nimport '../shared/ReportsView.css';\nimport { Spinner, Table, Nav, Dropdown, DropdownButton, Modal, Form, Button } from 'react-bootstrap';\nimport trash from './shared/trash.png';\nimport edit from '../shared/edit.png';\nimport tick from '../shared/tick.png';\nimport excel from '../shared/excelicon.png';\nimport axios from 'axios';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport { categories } from '../shared/lib/categories';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport { addCategory } from '../shared/lib/categories';\nexport default class ReportsView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editSave: 'none',\n      users: [],\n      isLoaded: false,\n      emailModal: 'none',\n      individualEmailModule: 'none',\n      reports: [],\n      importFileModal: 'none',\n      exportFileModal: 'none',\n      editReportModal: 'none',\n      addModalDisplay: 'none',\n      importBtnClicked: 0,\n      exportbtnClicked: 0,\n      saveBtnClicked: 0,\n      editBtnClicked: 0,\n      addBtnClicked: 0,\n      deleteBtnClicked: false,\n      editFieldID: '',\n      editFieldIndex: 0,\n      deleteModalDisplay: 'none',\n      chosenUser: 'User',\n      chosenIndustry: 'Industry',\n      selectedFile: null,\n      file: {},\n      data: [],\n      cols: [],\n      subSector: '',\n      industry: 'Industry',\n      projects: [],\n      projectName: 'Project',\n      categoryModal: 'none',\n      industries: [],\n      determinedIndustry: ''\n    };\n\n    this.onEditClick = () => {\n      this.setState({\n        navigation: 'edit'\n      }, () => {\n        this.toggleSave();\n      });\n    };\n\n    this.toggleEmailModalDisplay = () => {\n      this.state.emailModal === 'none' ? this.setState({\n        emailModal: 'block'\n      }) : this.setState({\n        emailModal: 'none'\n      });\n    };\n\n    this.toggleIndividualEmailModalDisplay = () => {\n      this.state.individualEmailModule === 'none' ? this.setState({\n        individualEmailModule: 'block'\n      }) : this.setState({\n        individualEmailModule: 'none'\n      });\n    };\n\n    this.toggleImportModalDisplay = () => {\n      this.state.importFileModal === 'none' ? this.setState({\n        importFileModal: 'block'\n      }) : this.setState({\n        importFileModal: 'none',\n        importBtnClicked: 0\n      });\n    };\n\n    this.toggleExportModalDisplay = () => {\n      this.state.exportFileModal === 'none' ? this.setState({\n        exportFileModal: 'block'\n      }) : this.setState({\n        exportFileModal: 'none',\n        exportbtnClicked: 0\n      });\n    };\n\n    this.toggleEditModalDisplay = () => {\n      this.state.editReportModal === 'none' ? this.setState({\n        editReportModal: 'block'\n      }) : this.setState({\n        editReportModal: 'none'\n      });\n    };\n\n    this.toggleIndstryModalDisplay = () => {\n      this.state.categoryModal === 'none' ? this.setState({\n        categoryModal: 'block'\n      }) : this.setState({\n        categoryModal: 'none'\n      });\n    };\n\n    this.toggleAddModalDisplay = () => {\n      this.state.addModalDisplay === 'none' ? this.setState({\n        addModalDisplay: 'block'\n      }) : this.setState({\n        addModalDisplay: 'none'\n      });\n    };\n\n    this.toggleDeleteModal = () => {\n      this.state.deleteModalDisplay === 'none' ? this.setState({\n        deleteModalDisplay: 'block'\n      }) : this.setState({\n        deleteModalDisplay: 'none'\n      });\n    };\n\n    this.getEditField = id => {\n      const field = this.state.reports.filter(report => report._id === id);\n      return field;\n    };\n\n    this.saveEditedFied = async id => {\n      console.log('saving...');\n      this.setState({\n        editBtnClicked: 1\n      });\n\n      try {\n        const edits = await Array.from(document.getElementById('edit-form')).map(node => node);\n        const saveEdits = {\n          companyName: edits[0].value.length < 1 ? edits[0].getAttribute('placeholder') : edits[0].value,\n          contactPerson: edits[1].value.length < 1 ? edits[1].getAttribute('placeholder') : edits[1].value,\n          position: edits[2].value.length < 1 ? edits[2].getAttribute('placeholder') : edits[2].value,\n          email1: edits[3].value.length < 1 ? edits[3].getAttribute('placeholder') : edits[3].value,\n          email2: edits[4].value.length < 1 ? edits[4].getAttribute('placeholder') : edits[4].value,\n          mobile1: edits[5].value.length < 1 ? edits[5].getAttribute('placeholder') : edits[5].value,\n          mobile2: edits[6].value.length < 1 ? edits[6].getAttribute('placeholder') : edits[6].value,\n          website: edits[7].value.length < 1 ? edits[7].getAttribute('placeholder') : edits[7].value,\n          industry: edits[8].value.length < 1 ? edits[8].getAttribute('placeholder') : edits[8].value,\n          productDescription: edits[9].value.length < 1 ? edits[9].getAttribute('placeholder') : edits[9].value,\n          country: edits[10].value.length < 1 ? edits[10].getAttribute('placeholder') : edits[10].value,\n          collectionDate: new Date(),\n          collectionTime: new Date(),\n          submittedBy: 'admin'\n        }; // console.log(saveEdits)\n\n        axios.post(`/api/v1/admin/edit_record/${id}`, saveEdits, {\n          headers: {\n            'auth-token': `${localStorage.getItem('auth-token')}`\n          }\n        }).then(res => {\n          alert(\"Succesfully saved your changes\");\n          console.log(res);\n          this.toggleEditModalDisplay();\n          this.reloadPage();\n        }).catch(err => console.log(err));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.addReport = async () => {\n      const edits = await Array.from(document.getElementById('add-form')).map(node => node);\n      const savedReport = {\n        projectName: this.state.projectName,\n        companyName: edits[1].value,\n        contactPerson: edits[2].value,\n        position: edits[3].value,\n        email1: edits[4].value,\n        email2: edits[5].value,\n        mobile1: edits[6].value,\n        mobile2: edits[7].value,\n        website: edits[8].value,\n        industry: this.state.determinedIndustry,\n        subSector: this.state.industry,\n        productDescription: document.getElementsByName(\"productdescription\")[0].value,\n        country: document.getElementsByName(\"country\")[0].value,\n        collectionDate: new Date().toUTCString(),\n        collectionTime: new Date().toUTCString(),\n        submittedBy: 'admin'\n      };\n      console.log(savedReport);\n\n      try {\n        axios.post(\"/api/v1/admin/add_record\", savedReport, {\n          headers: {\n            'auth-token': `${localStorage.getItem('auth-token')}`\n          }\n        }).then(res => {\n          alert('succesfully added ' + res);\n          this.setState({\n            addBtnClicked: 0\n          });\n          this.toggleAddModalDisplay();\n          this.reloadPage();\n        }).catch(err => {\n          console.log(err);\n          document.getElementById('warning').value = err;\n        });\n      } catch (err) {\n        console.log('error' + err);\n      }\n    };\n\n    this.removeUser = async id => {\n      try {\n        axios.delete(\"/api/v1/admin/delete_record/\" + id, {\n          headers: {\n            'auth-token': `${localStorage.getItem('auth-token')}`\n          }\n        }).then(res => {\n          console.log('succesfully deleted record ' + res);\n          alert('Succesfully deleted record');\n          this.toggleDeleteModal();\n          this.reloadPage();\n        });\n      } catch (err) {\n        console.log('sorry ' + err);\n      }\n    };\n\n    this.reloadPage = () => {\n      window.location.reload();\n    };\n\n    this.handleChange = e => {\n      const files = e.target.files;\n      if (files && files[0]) this.setState({\n        file: files[0]\n      });\n    };\n\n    this.handleFile = () => {\n      /* Boilerplate to set up FileReader */\n      const reader = new FileReader();\n      const rABS = !!reader.readAsBinaryString;\n\n      reader.onload = e => {\n        /* Parse data */\n        const bstr = e.target.result;\n        const wb = XLSX.read(bstr, {\n          type: rABS ? 'binary' : 'array',\n          bookVBA: true\n        });\n        /* Get first worksheet */\n\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        /* Convert array of arrays */\n\n        const data = XLSX.utils.sheet_to_json(ws);\n        /* Update state */\n\n        this.setState({\n          data: data,\n          cols: make_cols(ws['!ref'])\n        }, () => {\n          console.log(this.state.data);\n        });\n      };\n\n      if (rABS) {\n        reader.readAsBinaryString(this.state.file);\n      } else {\n        reader.readAsArrayBuffer(this.state.file);\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/v1/admin/get_reports\", {\n      headers: {\n        'auth-token': `${localStorage.getItem('auth-token')}`\n      }\n    }).then(res => {\n      this.setState({\n        isLoaded: true,\n        reports: res.data\n      });\n    }).catch(err => console.log(err));\n    axios.get('/api/v1/admin/get_industries', {\n      headers: {\n        'auth-token': `${localStorage.getItem('auth-token')}`\n      }\n    }).then(res => {\n      this.setState({\n        industries: res.data\n      });\n    });\n    axios.get('/api/v1/admin/get_users', {\n      headers: {\n        'auth-token': `${localStorage.getItem('auth-token')}`\n      }\n    }).then(res => {\n      this.setState({\n        users: res.data\n      });\n    }).catch(err => {\n      console.log('error getting users' + err);\n    });\n    axios.get('/api/v1/admin/get_projects', {\n      headers: {\n        'auth-token': `${localStorage.getItem('auth-token')}`\n      }\n    }).then(res => {\n      this.setState({\n        projects: res.data\n      });\n    }).catch(err => {\n      console.log('error getting users' + err);\n    });\n    localStorage.setItem(\"page\", \"database\");\n  }\n\n  render() {\n    console.log(this.state.reports);\n\n    if (this.state.isLoaded) {\n      const importLoadingBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 41\n        }\n      }), \"Importing...\");\n      const importBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.handleFile();\n          this.setState({\n            importBtnClicked: 1\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 28\n        }\n      }, \"Import\");\n      const exportBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          axios.post(\"http://localhost:1332/api/v1/export_excel\", this.state.reports, {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n            console.log(res);\n            alert('Succesfully downloaded excel file');\n            this.setState({\n              exportbtnClicked: 1\n            });\n            this.toggleExportModalDisplay();\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 28\n        }\n      }, \"Export\");\n      const exportLoadingBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 41\n        }\n      }), \"Exporting...\");\n      const saveLoadingBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 41\n        }\n      }), \"Saving...\");\n      const saveBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.saveEditedFied(this.state.editFieldID);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }\n      }, \"Save\");\n      const addBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.setState({\n            addBtnClicked: 1\n          });\n          this.addReport();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 24\n        }\n      }, \"Add Entry\");\n      const addLoadingBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 37\n        }\n      }), \"Adding...\");\n      const deleteBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          this.setState({\n            deleteBtnClicked: true\n          });\n          this.removeUser(this.state.editFieldID);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 27\n        }\n      }, \"Delete\");\n      const loadingDeleteBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 29\n        }\n      }), \"Deleting...\");\n      const industriesDB = this.state.industries.map(industry => industry);\n      const categoriesAndIndustries = [...categories, ...industriesDB];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.deleteModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        className: \"modal-add-user\",\n        style: {\n          display: this.state.deleteModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, \"Delete User?\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }, \"Are you sure you want to delete this record?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleDeleteModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), !this.state.deleteBtnClicked ? deleteBtn : loadingDeleteBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.exportFileModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.exportFileModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }\n      }, \"Export to Excel file\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }\n      }, \"Are you sure you want to export?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleExportModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), this.state.exportbtnClicked < 1 ? exportBtn : exportLoadingBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.importFileModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.importFileModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      }, \"Choose file to import\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }\n      }, \"Choose a file:\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        id: \"avatar\",\n        name: \"avatar\",\n        accept: SheetJSFT,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 25\n        }\n      }, \"File should be of .xlsx type.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleImportModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), this.state.importBtnClicked < 1 ? importBtn : importLoadingBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.emailModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.emailModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 25\n        }\n      }, \"Send Bulk Email\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formRecipients\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 29\n        }\n      }, \"Recipients\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-secondary\",\n        title: \"Industry\",\n        id: \"input-group-dropdown-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 28\n        }\n      }, categories.map(category => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DropdownButton, {\n          key: category.industry,\n          style: {\n            width: '70%',\n            margin: '15px'\n          },\n          variant: \"outline-secondary\",\n          title: category.industry,\n          id: \"input-group-dropdown-102\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            maxHeight: '350px',\n            overflowY: 'scroll'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 57\n          }\n        }, category.subSector.map(subsector => {\n          return /*#__PURE__*/React.createElement(Dropdown.Item, {\n            key: subsector,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 71\n            }\n          }, subsector);\n        }))));\n      })), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-secondary\",\n        title: \"Project\",\n        id: \"input-group-dropdown-104\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 37\n        }\n      }, this.state.projects.map(project => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: project._id,\n          onClick: () => {\n            this.setState({\n              reports: this.state.reports.filter(report => report.projectName === project.projectName)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 57\n          }\n        }, project.projectName);\n      })))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formContactPerson\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 29\n        }\n      }, \"Subject\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"e.g Welcome to B2B Africa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formPosition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 29\n        }\n      }, \"Body\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        placeholder: \"Enter message...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleEmailModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 25\n        }\n      }, \"Send Email\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.editReportModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.editReportModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 29\n        }\n      }, \"Edit Field\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        id: \"edit-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formCompanyName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 33\n        }\n      }, \"Company Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.companyName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formContactPerson\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 33\n        }\n      }, \"Contact Person\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.contactPerson),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formPosition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 33\n        }\n      }, \"Position\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.position),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"email1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 33\n        }\n      }, \"Email 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.email1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"email2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 33\n        }\n      }, \"Email 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.email2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"mobile1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 33\n        }\n      }, \"Mobile 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.mobile1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"mobile2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 33\n        }\n      }, \"Mobile 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.mobile2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"website\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 33\n        }\n      }, \"Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.website),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"industry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 33\n        }\n      }, \"Industry\"), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-secondary\",\n        title: \"Industry\",\n        id: \"input-group-dropdown-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 33\n        }\n      }, categoriesAndIndustries.map(category => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DropdownButton, {\n          key: category.industry,\n          style: {\n            width: '70%',\n            margin: '15px'\n          },\n          variant: \"outline-secondary\",\n          title: category.industry,\n          id: \"input-group-dropdown-14\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            maxHeight: '350px',\n            overflowY: 'scroll'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 57\n          }\n        }, category.subSector.map(subsector => {\n          return /*#__PURE__*/React.createElement(Dropdown.Item, {\n            key: subsector,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 71\n            }\n          }, subsector);\n        }))));\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"productDescription\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 33\n        }\n      }, \"Product Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.productDescription),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 33\n        }\n      }, \"Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: this.getEditField(this.state.editFieldID).map(field => field.country),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleEditModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), this.state.editBtnClicked < 1 ? saveBtn : saveLoadingBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.addModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.addModalDisplay\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 25\n        }\n      }, \"Report Entry\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        id: \"add-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"projects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 29\n        }\n      }, \"Project\"), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-secondary\",\n        title: this.state.projectName,\n        id: \"input-group-dropdown-7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 29\n        }\n      }, this.state.projects.map((project, index) => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: project._id,\n          className: \"projects-item\",\n          onClick: () => {\n            this.setState({\n              projectName: project.projectName\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 53\n          }\n        }, project.projectName);\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formCompanyName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 29\n        }\n      }, \"Company Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"company\",\n        type: \"textbox\",\n        placeholder: \"Enter name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formContactPerson\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 29\n        }\n      }, \"Contact Person\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"Contact Person\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formPosition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 29\n        }\n      }, \"Position\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"Position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"email1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 29\n        }\n      }, \"Email 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"example@example.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"email2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 29\n        }\n      }, \"Email 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"example@example.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"mobile1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 29\n        }\n      }, \"Mobile 1\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"07000000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"mobile2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 29\n        }\n      }, \"Mobile 2\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"0700000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"website\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 29\n        }\n      }, \"Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"www.example.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"industry\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 29\n        }\n      }, \"Industry\"), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-secondary\",\n        title: this.state.industry,\n        id: \"input-group-dropdown-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 29\n        }\n      }, categoriesAndIndustries.map(category => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DropdownButton, {\n          key: category.industry,\n          style: {\n            width: '70%',\n            margin: '15px'\n          },\n          variant: \"outline-secondary\",\n          title: category.industry,\n          onClick: () => {\n            this.setState({\n              determinedIndustry: category.industry\n            });\n          },\n          id: \"input-group-dropdown-31\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 52\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            maxHeight: '350px',\n            overflowY: 'scroll'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 57\n          }\n        }, category.subSector.map((subsector, index) => {\n          return /*#__PURE__*/React.createElement(Dropdown.Item, {\n            key: subsector,\n            className: \"subsectors\",\n            onClick: () => {\n              this.setState({\n                industry: subsector\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 71\n            }\n          }, subsector);\n        }))));\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"productDescription\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 29\n        }\n      }, \"Product Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"productdescription\",\n        type: \"textbox\",\n        placeholder: \"e.g supplies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"country\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 29\n        }\n      }, \"Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"country\",\n        type: \"textbox\",\n        placeholder: \"e.g Kenya\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"small\", {\n        id: \"warning\",\n        style: {\n          color: 'red',\n          margin: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleAddModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 25\n        }\n      }, \"Close\"), this.state.addBtnClicked < 1 ? addBtn : addLoadingBtn))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.individualEmailModule\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 25\n        }\n      }, \"Send Individual Email\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formContactPerson\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 29\n        }\n      }, \"Subject\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textbox\",\n        placeholder: \"e.g Welcome to B2B Africa\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formPosition\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 29\n        }\n      }, \"Body\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"4\",\n        placeholder: \"Enter message...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.toggleIndividualEmailModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 25\n        }\n      }, \"Send Email\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-bg\",\n        style: {\n          display: this.state.categoryModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Dialog, {\n        scrollable: true,\n        className: \"modal-add-entry\",\n        style: {\n          display: this.state.categoryModal\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 25\n        }\n      }, \"Add An Industry/Subsector\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        style: {\n          maxHeight: 'calc(100vh - 210px)',\n          overflowY: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formRecipients\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formIndustryName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 37\n        }\n      }, \"Industry\"), /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"industrysubsector\",\n        type: \"textbox\",\n        placeholder: \"e.g BUILDING AND CONSTRUCTION\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formSubsectorName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 37\n        }\n      }, \"Subsector\"), /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"industrysubsector\",\n        type: \"textbox\",\n        placeholder: \"e.g Automation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        style: {\n          color: 'green'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 37\n        }\n      }, \"Kindly separate subsectors with a comma \\\",\\\"\")))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: () => {\n          this.toggleIndstryModalDisplay();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 25\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          axios.post(\"/api/v1/admin/add_industry\", {\n            industry: document.getElementsByClassName(\"industrysubsector\")[0].value,\n            subSector: document.getElementsByClassName(\"industrysubsector\")[1].value\n          }, {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n            alert(\"Succesfully added an Industry\" + res);\n            this.reloadPage();\n          }).catch(err => {\n            console.log(err);\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 25\n        }\n      }, \"Add\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"h2-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 21\n        }\n      }, \"Database\"), /*#__PURE__*/React.createElement(Nav, {\n        variant: \"pills\",\n        defaultActiveKey: \"#\",\n        className: \"navigation-tab-menu\",\n        style: {\n          position: 'absolute',\n          left: ' 50px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 29\n        }\n      }, \"View\")), /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        onClick: this.toggleExportModalDisplay,\n        eventKey: \"link-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 29\n        }\n      }, \"Export\", /*#__PURE__*/React.createElement(\"img\", {\n        src: excel,\n        alt: \"add\",\n        style: {\n          width: '1.5rem',\n          height: '1.5rem',\n          borderRadius: '50%',\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(Nav.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          top: 0,\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginRight: '1.5rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 33\n        }\n      }, \"Filter:\"), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem',\n          width: '100%'\n        },\n        variant: \"outline-primary\",\n        title: this.state.chosenIndustry,\n        id: \"input-group-dropdown-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 37\n        }\n      }, categoriesAndIndustries.map(category => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DropdownButton, {\n          key: category.industry,\n          style: {\n            width: '70%',\n            margin: '15px'\n          },\n          variant: \"outline-secondary\",\n          title: category.industry,\n          id: \"input-group-dropdown-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            maxHeight: '350px',\n            overflowY: 'scroll'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 57\n          }\n        }, Array.isArray(category.subSector) ? category.subSector.map(subsector => {\n          return /*#__PURE__*/React.createElement(Dropdown.Item, {\n            key: subsector,\n            onClick: () => {\n              this.setState({\n                chosenIndustry: subsector,\n                reports: this.state.reports.filter(report => report.industry === subsector)\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 71\n            }\n          }, subsector);\n        }) : category.subSector.split(\",\").map(subsector => {\n          return /*#__PURE__*/React.createElement(Dropdown.Item, {\n            key: subsector,\n            onClick: () => {\n              this.setState({\n                chosenIndustry: subsector,\n                reports: this.state.reports.filter(report => report.industry === subsector)\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 71\n            }\n          }, subsector);\n        }))));\n      })), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-primary\",\n        title: \"Project\",\n        id: \"input-group-dropdown-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 37\n        }\n      }, this.state.projects.map(project => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: project._id,\n          onClick: () => {\n            this.setState({\n              reports: this.state.reports.filter(report => report.projectName === project.projectName)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 57\n          }\n        }, project.projectName);\n      })), /*#__PURE__*/React.createElement(DropdownButton, {\n        style: {\n          marginRight: '1rem'\n        },\n        variant: \"outline-primary\",\n        title: this.state.chosenUser,\n        id: \"input-group-dropdown-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 37\n        }\n      }, this.state.users.map(user => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          key: user._id,\n          onClick: () => {\n            this.setState({\n              chosenUser: user.fullname,\n              reports: this.state.reports.filter(report => report.submittedBy.toLowerCase() === user.username.toLowerCase())\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 57\n          }\n        }, user.fullname);\n      })))), /*#__PURE__*/React.createElement(Nav.Item, {\n        onClick: this.toggleEmailModalDisplay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        eventKey: \"link-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 29\n        }\n      }, \"Send bulk email\")), /*#__PURE__*/React.createElement(Nav.Item, {\n        style: {\n          position: 'absolute',\n          left: '30%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        href: \"#action\",\n        onClick: () => {\n          this.toggleImportModalDisplay();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 25\n        }\n      }, \"Import file\", /*#__PURE__*/React.createElement(\"img\", {\n        src: excel,\n        alt: \"add\",\n        style: {\n          width: '1.5rem',\n          height: '1.5rem',\n          borderRadius: '50%',\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Nav.Item, {\n        style: {\n          position: 'absolute',\n          left: '42.5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        href: \"#\",\n        onClick: () => {\n          this.toggleAddModalDisplay();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 29\n        }\n      }, \"Add entry\")), /*#__PURE__*/React.createElement(Nav.Item, {\n        style: {\n          position: 'absolute',\n          left: '52.5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        href: \"#\",\n        onClick: () => {\n          this.toggleIndstryModalDisplay();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 25\n        }\n      }, \"Add Industry\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"section-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        variant: \"dark\",\n        className: \"reports-table\",\n        style: {\n          marginTop: '30px'\n        },\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        variant: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 33\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 33\n        }\n      }, \"Company Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 33\n        }\n      }, \"Contact Person\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 33\n        }\n      }, \"Position\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 33\n        }\n      }, \"Email 1\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 33\n        }\n      }, \"Email 2\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 33\n        }\n      }, \"Mobile 1\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 33\n        }\n      }, \"Mobile 2\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 33\n        }\n      }, \"Website\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 33\n        }\n      }, \"Industry\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 33\n        }\n      }, \"Subsector\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 33\n        }\n      }, \"Product Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 33\n        }\n      }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 33\n        }\n      }, \"Project\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 33\n        }\n      }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098,\n          columnNumber: 33\n        }\n      }, \"Collection Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 33\n        }\n      }, \"Collection Time\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 33\n        }\n      }, \"Submitted by\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 29\n        }\n      }, this.state.reports.reverse().map((user, index) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n          key: user.password,\n          src: edit,\n          style: {\n            marginLeft: '-5px'\n          },\n          className: \"delete-icon\",\n          onClick: () => {\n            this.setState({\n              editFieldID: user._id,\n              editFieldIndex: index\n            });\n            this.toggleEditModalDisplay();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1108,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          key: user.password,\n          src: trash,\n          style: {\n            marginLeft: '30px'\n          },\n          className: \"delete-icon\",\n          onClick: () => {\n            this.setState({\n              editFieldID: user._id\n            });\n            this.toggleDeleteModal();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          className: \"user-rows\",\n          onClick: this.toggleIndividualEmailModalDisplay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 41\n          }\n        }, index), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 41\n          }\n        }, \" \", user.companyName), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 41\n          }\n        }, user.contactPerson), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 41\n          }\n        }, \" \", user.position), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 41\n          }\n        }, user.email1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 41\n          }\n        }, user.email2), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 41\n          }\n        }, user.mobile1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 41\n          }\n        }, user.mobile2), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 41\n          }\n        }, user.website), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1133,\n            columnNumber: 41\n          }\n        }, user.industry), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 41\n          }\n        }, user.subSector), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 41\n          }\n        }, user.productDescription), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 41\n          }\n        }, user.country), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 41\n          }\n        }, user.projectName), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            color: 'yellow'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 41\n          }\n        }, user.confirmed ? 'Confirmed' : 'Pending'), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1139,\n            columnNumber: 41\n          }\n        }, user.collectionDate), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 41\n          }\n        }, user.collectionTime), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 41\n          }\n        }, user.submittedBy)));\n      }))))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      id: \"spinner\",\n      animation: \"grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/gachez/EnterpriseSystems/tims-client/src/index/App/Dashboard/ReportsView.js"],"names":["React","Spinner","Table","Nav","Dropdown","DropdownButton","Modal","Form","Button","trash","edit","tick","excel","axios","categories","XLSX","make_cols","SheetJSFT","addCategory","ReportsView","Component","state","editSave","users","isLoaded","emailModal","individualEmailModule","reports","importFileModal","exportFileModal","editReportModal","addModalDisplay","importBtnClicked","exportbtnClicked","saveBtnClicked","editBtnClicked","addBtnClicked","deleteBtnClicked","editFieldID","editFieldIndex","deleteModalDisplay","chosenUser","chosenIndustry","selectedFile","file","data","cols","subSector","industry","projects","projectName","categoryModal","industries","determinedIndustry","onEditClick","setState","navigation","toggleSave","toggleEmailModalDisplay","toggleIndividualEmailModalDisplay","toggleImportModalDisplay","toggleExportModalDisplay","toggleEditModalDisplay","toggleIndstryModalDisplay","toggleAddModalDisplay","toggleDeleteModal","getEditField","id","field","filter","report","_id","saveEditedFied","console","log","edits","Array","from","document","getElementById","map","node","saveEdits","companyName","value","length","getAttribute","contactPerson","position","email1","email2","mobile1","mobile2","website","productDescription","country","collectionDate","Date","collectionTime","submittedBy","post","headers","localStorage","getItem","then","res","alert","reloadPage","catch","err","addReport","savedReport","getElementsByName","toUTCString","removeUser","delete","window","location","reload","handleChange","e","files","target","handleFile","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","type","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","readAsArrayBuffer","componentDidMount","get","setItem","render","importLoadingBtn","importBtn","exportBtn","exportLoadingBtn","saveLoadingBtn","saveBtn","addBtn","addLoadingBtn","deleteBtn","loadingDeleteBtn","industriesDB","categoriesAndIndustries","display","maxHeight","overflowY","color","marginRight","category","width","margin","subsector","project","index","getElementsByClassName","left","height","borderRadius","marginLeft","right","top","isArray","split","user","fullname","toLowerCase","username","marginTop","reverse","password","confirmed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../shared/ReportsView.css';\nimport {Spinner,Table, Nav, Dropdown, DropdownButton,Modal, Form, Button} from 'react-bootstrap';\nimport trash from './shared/trash.png';\nimport edit from '../shared/edit.png';\nimport tick from '../shared/tick.png';\nimport excel from '../shared/excelicon.png';\nimport axios from 'axios';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport {categories} from '../shared/lib/categories';\nimport XLSX from 'xlsx';\nimport { make_cols } from './MakeColumns';\nimport { SheetJSFT } from './types';\nimport { addCategory } from '../shared/lib/categories';\n\n\n\nexport default class ReportsView extends React.Component{\n\n    state = {\n        editSave: 'none',\n        users: [],\n        isLoaded: false,\n        emailModal: 'none',\n        individualEmailModule: 'none',\n        reports: [],\n        importFileModal: 'none',\n        exportFileModal: 'none',\n        editReportModal: 'none',\n        addModalDisplay: 'none',\n        importBtnClicked: 0,\n        exportbtnClicked: 0,\n        saveBtnClicked: 0,\n        editBtnClicked: 0,\n        addBtnClicked: 0,\n        deleteBtnClicked: false,\n        editFieldID: '',\n        editFieldIndex: 0,\n        deleteModalDisplay: 'none',\n        chosenUser: 'User',\n        chosenIndustry: 'Industry',\n        selectedFile: null,\n        file: {},\n        data: [],\n        cols: [],\n        subSector: '',\n        industry: 'Industry',\n        projects: [],\n        projectName: 'Project',\n        categoryModal: 'none',\n        industries: [],\n        determinedIndustry: ''\n    }\n\n    componentDidMount() {\n        axios.get(\"/api/v1/admin/get_reports\", {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n              this.setState({\n                  isLoaded: true,\n                  reports: res.data\n              })\n          }).catch(err => console.log(err));\n\n          axios.get('/api/v1/admin/get_industries',{\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          }).then(res => {\n              this.setState({\n                  industries: res.data\n              })\n          })\n\n          axios.get('/api/v1/admin/get_users', {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          })\n        .then(res => {\n            this.setState({\n                users: res.data\n            });\n        }).catch(err => {\n            console.log('error getting users' + err)\n        })\n\n        axios.get('/api/v1/admin/get_projects', {\n            headers: {\n              'auth-token': `${localStorage.getItem('auth-token')}`\n            }\n          })\n        .then(res => {\n            this.setState({\n                projects: res.data\n            });\n        }).catch(err => {\n            console.log('error getting users' + err)\n        });\n\n        localStorage.setItem(\"page\", \"database\");  \n    }\n\n    \n\n    onEditClick = () => {\n        this.setState({\n            navigation: 'edit'\n        }, () => {\n            this.toggleSave();\n        })\n\n    }\n\n\n    toggleEmailModalDisplay = () => {\n        this.state.emailModal === 'none' ? this.setState({emailModal: 'block'}) : this.setState({emailModal: 'none'})\n        \n    }\n\n    toggleIndividualEmailModalDisplay = () => {\n        this.state.individualEmailModule === 'none' ? this.setState({individualEmailModule: 'block'}) : this.setState({individualEmailModule: 'none'})\n        \n    }\n\n    toggleImportModalDisplay = () => {\n        this.state.importFileModal === 'none' ? this.setState({importFileModal: 'block'}) : this.setState({importFileModal: 'none', importBtnClicked: 0})\n        \n    }\n\n    toggleExportModalDisplay = () => {\n        this.state.exportFileModal === 'none' ? this.setState({exportFileModal: 'block'}) : this.setState({exportFileModal: 'none', exportbtnClicked: 0})\n        \n    }\n\n    toggleEditModalDisplay = () => {\n        this.state.editReportModal === 'none' ? this.setState({editReportModal: 'block'}) : this.setState({editReportModal: 'none'})\n\n    }\n\n    toggleIndstryModalDisplay = () => {\n        this.state.categoryModal === 'none' ? this.setState({categoryModal: 'block'}) : this.setState({categoryModal: 'none'})\n    }\n\n    toggleAddModalDisplay = () => {\n        this.state.addModalDisplay === 'none' ? this.setState({addModalDisplay: 'block'}) : this.setState({addModalDisplay: 'none'})\n\n    }\n\n    toggleDeleteModal = () => {\n        this.state.deleteModalDisplay === 'none' ? this.setState({deleteModalDisplay: 'block'}) : this.setState({deleteModalDisplay: 'none'})\n    }\n\n\n    getEditField = (id ) => {\n        const field = this.state.reports.filter(report => report._id === id);\n\n        return field;\n\n    }\n\n    saveEditedFied = async (id) => {\n        console.log('saving...')\n        this.setState({\n            editBtnClicked: 1\n        })\n       try{\n\n        const edits = await Array.from(document.getElementById('edit-form')).map(node => node)\n       \n        const saveEdits = {\n            companyName:  edits[0].value.length < 1 ? edits[0].getAttribute('placeholder') : edits[0].value, \n            contactPerson: edits[1].value.length < 1 ? edits[1].getAttribute('placeholder') : edits[1].value,\n            position:   edits[2].value.length < 1 ? edits[2].getAttribute('placeholder') : edits[2].value,\n            email1:    edits[3].value.length < 1 ? edits[3].getAttribute('placeholder') : edits[3].value,\n            email2:   edits[4].value.length < 1 ? edits[4].getAttribute('placeholder') : edits[4].value,\n            mobile1:   edits[5].value.length < 1 ? edits[5].getAttribute('placeholder') : edits[5].value,\n            mobile2:   edits[6].value.length < 1 ? edits[6].getAttribute('placeholder'): edits[6].value,\n            website: edits[7].value.length < 1 ? edits[7].getAttribute('placeholder') : edits[7].value,\n            industry: edits[8].value.length < 1 ? edits[8].getAttribute('placeholder') : edits[8].value,\n            productDescription: edits[9].value.length < 1 ? edits[9].getAttribute('placeholder') : edits[9].value,\n            country: edits[10].value.length < 1 ? edits[10].getAttribute('placeholder') : edits[10].value,\n            collectionDate: new Date(),\n            collectionTime: new Date(),\n            submittedBy: 'admin'\n        }\n\n        // console.log(saveEdits)\n        axios.post(`/api/v1/admin/edit_record/${id}`, saveEdits, {\n            headers: {\n                'auth-token': `${localStorage.getItem('auth-token')}`\n              }\n        }).then(res => {\n            alert(\"Succesfully saved your changes\");     \n                console.log(res);\n                this.toggleEditModalDisplay();\n                this.reloadPage();\n        }).catch(err => console.log(err))\n       } catch(err) {console.log(err)}\n    }\n\n    addReport = async () => {\n        const edits = await Array.from(document.getElementById('add-form')).map(node => node);\n\n        const savedReport = {\n            projectName: this.state.projectName,\n            companyName:  edits[1].value, \n            contactPerson: edits[2].value,\n            position:   edits[3].value,\n            email1:    edits[4].value,\n            email2:   edits[5].value,\n            mobile1:   edits[6].value,\n            mobile2:   edits[7].value,\n            website: edits[8].value,\n            industry: this.state.determinedIndustry,\n            subSector: this.state.industry,\n            productDescription: document.getElementsByName(\"productdescription\")[0].value,\n            country: document.getElementsByName(\"country\")[0].value,\n            collectionDate: new Date().toUTCString(),\n            collectionTime: new Date().toUTCString(),\n            submittedBy: 'admin'\n        }\n\n        console.log(savedReport)\n        try{\n            axios.post(\"/api/v1/admin/add_record\", savedReport, {\n                headers: {\n                    'auth-token': `${localStorage.getItem('auth-token')}`\n                }\n            }).then(res => {\n                alert('succesfully added ' + res)\n                this.setState({\n                    addBtnClicked: 0,\n                });\n                this.toggleAddModalDisplay();\n                this.reloadPage();\n            }).catch(err => {\n                console.log(err)\n                document.getElementById('warning').value = err\n            \n            })\n        } catch(err) {console.log('error' + err)}\n\n    }\n\n    removeUser = async (id) => {\n        try{\n            axios.delete(\"/api/v1/admin/delete_record/\" + id,  {\n                headers: {\n                'auth-token': `${localStorage.getItem('auth-token')}`\n                }\n            })\n            .then(res => {\n                console.log('succesfully deleted record ' + res)\n                alert('Succesfully deleted record');\n                this.toggleDeleteModal();\n                this.reloadPage();\n            })\n        } catch (err) {console.log('sorry ' + err)}\n    }\n\n\n    reloadPage = () => {\n\n        window.location.reload()\n    }\n\n    handleChange = (e) => {\n        const files = e.target.files;\n        if (files && files[0]) this.setState({ file: files[0] });\n      };\n     \n      handleFile = () => {\n        /* Boilerplate to set up FileReader */\n        const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n     \n        reader.onload = (e) => {\n          /* Parse data */\n          const bstr = e.target.result;\n          const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n          /* Get first worksheet */\n          const wsname = wb.SheetNames[0];\n          const ws = wb.Sheets[wsname];\n          /* Convert array of arrays */\n          const data = XLSX.utils.sheet_to_json(ws);\n          /* Update state */\n      \n            this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\n                    console.log(this.state.data)\n              });\n        };\n     \n        if (rABS) {\n          reader.readAsBinaryString(this.state.file);\n        } else {\n          reader.readAsArrayBuffer(this.state.file);\n        };\n      }\n\n    render() {\n        console.log(this.state.reports)\n        if(this.state.isLoaded) {\n        const importLoadingBtn =  <Button variant=\"primary\" disabled>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"grow\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                        Importing...\n                                    </Button>;\n        \n        const importBtn =  <Button variant=\"primary\" onClick={() => {\n                                this.handleFile()\n                                this.setState({ importBtnClicked: 1 })}\n                            }>Import</Button>;\n           \n        const exportBtn =  <Button variant=\"primary\" onClick={() => {\n            axios.post(\"http://localhost:1332/api/v1/export_excel\", this.state.reports,{\n                headers: {\n                'auth-token': `${localStorage.getItem('auth-token')}`\n                }\n            }).then(res => {\n                console.log(res)\n                alert('Succesfully downloaded excel file');\n                this.setState({ exportbtnClicked: 1 })\n                this.toggleExportModalDisplay();\n            })\n        }\n    \n            \n            }>Export</Button>;\n        const exportLoadingBtn =  <Button variant=\"primary\" disabled>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"grow\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                        Exporting...\n                                    </Button>;\n\n        const saveLoadingBtn =  <Button variant=\"primary\" disabled>\n                                        <Spinner\n                                            as=\"span\"\n                                            animation=\"grow\"\n                                            size=\"sm\"\n                                            role=\"status\"\n                                            aria-hidden=\"true\"\n                                        />\n                                        Saving...\n                                        </Button>;\n\n        const saveBtn = <Button variant=\"primary\" onClick={() => {\n            this.saveEditedFied(this.state.editFieldID)\n            }}>\n            Save\n            </Button>;\n            \n        const addBtn = <Button variant=\"primary\" onClick={() => {\n            this.setState({\n                addBtnClicked: 1\n            })\n            this.addReport()\n        }}>Add Entry</Button>;    \n\n        const addLoadingBtn =  <Button variant=\"primary\" disabled>\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"grow\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden=\"true\"\n                                    />\n                                    Adding...\n                                </Button>;\n\n       \n        const deleteBtn = <Button variant=\"primary\" onClick={() => {\n            this.setState({\n                deleteBtnClicked: true\n            })\n            this.removeUser(this.state.editFieldID)\n        }}>Delete</Button>;\n\n        const loadingDeleteBtn = <Button variant=\"primary\" disabled>\n                            <Spinner\n                                as=\"span\"\n                                animation=\"grow\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            Deleting...\n                        </Button> ;\n\n        const industriesDB = this.state.industries.map( industry => industry);\n        const categoriesAndIndustries = [...categories, ...industriesDB];\n        \n    \n\n        return(\n                <>\n\n                {/* delete modal */}\n                <div className=\"modal-bg\" style={{\n                        display: this.state.deleteModalDisplay\n                            }}>\n                         \n                        <Modal.Dialog  className=\"modal-add-user\" style={{\n                        display: this.state.deleteModalDisplay\n                            }}>\n                        <Modal.Header >\n                            <Modal.Title>Delete User?</Modal.Title>\n                        </Modal.Header>\n    \n                        <Modal.Body>\n                            <p>Are you sure you want to delete this record?</p>\n                        </Modal.Body>\n    \n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.toggleDeleteModal}>Cancel</Button>\n                            {\n                               !this.state.deleteBtnClicked ?  deleteBtn : loadingDeleteBtn\n                            }\n                        </Modal.Footer>\n                        </Modal.Dialog>\n                         </div>  \n\n\n                {/* export file modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.exportFileModal\n                }}>\n                <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                    display: this.state.exportFileModal\n                }}>\n                    <Modal.Header >\n                        <Modal.Title>Export to Excel file</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                        <b>Are you sure you want to export?</b>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.toggleExportModalDisplay}>Cancel</Button>\n                        {\n                           this.state.exportbtnClicked < 1 ? exportBtn : exportLoadingBtn\n                       }\n                    </Modal.Footer>\n                    </Modal.Dialog>\n                </div>\n\n                {/* import file modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.importFileModal\n                }}>\n                <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                    display: this.state.importFileModal\n                }}>\n                    <Modal.Header >\n                        <Modal.Title>Choose file to import</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    <label for=\"avatar\">Choose a file:</label>\n\n                        <input type=\"file\"\n                            id=\"avatar\" name=\"avatar\"\n                            accept={SheetJSFT}\n                            onChange={this.handleChange} \n                            />\n                            <br />\n                        <small style={{color: 'red'}}>\n                         File should be of .xlsx type.\n                        </small>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.toggleImportModalDisplay}>Cancel</Button>\n                       {\n                           this.state.importBtnClicked < 1 ? importBtn : importLoadingBtn\n                       }\n                    </Modal.Footer>\n                    </Modal.Dialog>\n                </div>\n\n                {/* send email modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.emailModal\n                }}>\n                <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                    display: this.state.emailModal\n                }}>\n                    <Modal.Header >\n                        <Modal.Title>Send Bulk Email</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    <Form>\n                        <Form.Group controlId=\"formRecipients\">\n                            <Form.Label>Recipients</Form.Label>\n\n                           <div style={{display: 'flex'}}>\n                           <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-secondary\"\n                                        title=\"Industry\"\n                                        id=\"input-group-dropdown-12\"\n                                        >\n                                            {\n                                                categories.map( category => {\n                                                    return(\n                                                        <>\n                                                        <DropdownButton\n                                                        key={category.industry}\n                                                        style={{width: '70%', margin: '15px'}}\n                                                        variant=\"outline-secondary\"\n                                                        title={category.industry}\n                                                        id=\"input-group-dropdown-102\"\n                                                        >\n\n                                                        <div style={{maxHeight: '350px', overflowY: 'scroll'}}>\n                                                            {\n                                                                category.subSector.map( subsector => {\n                                                                    return(\n                                                                      <Dropdown.Item key={subsector} >{subsector}</Dropdown.Item>\n                                                        )\n                                                                })\n                                                            }\n                                                                    </div>\n                                                    </DropdownButton>\n\n                                                    </>\n                                                    )\n                                                })\n                                            }\n\n                                    </DropdownButton>\n\n                                    <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-secondary\"\n                                        title=\"Project\"\n                                        id=\"input-group-dropdown-104\"\n                                        >\n                                            {\n                                                this.state.projects.map(project => {\n                                                    return(\n                                                        <Dropdown.Item key={project._id} onClick={() => {\n                                                            this.setState({\n                                                                reports: this.state.reports.filter(report => report.projectName === project.projectName)\n                                                            });\n                                                        }}>{project.projectName}</Dropdown.Item>\n                                                    )\n                                                })\n                                            }\n\n                                    </DropdownButton>\n                           </div>\n                          \n\n                        </Form.Group>\n                       \n                        <Form.Group controlId=\"formContactPerson\">\n                            <Form.Label>Subject</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"e.g Welcome to B2B Africa\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formPosition\">\n                            <Form.Label>Body</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter message...\"/>\n                        </Form.Group>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.toggleEmailModalDisplay}>Cancel</Button>\n                        <Button variant=\"primary\">Send Email</Button>\n                    </Modal.Footer>\n                    </Modal.Dialog>\n                </div>\n\n              \n                  {/* edit report modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.editReportModal\n                }}>\n                    <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                        display: this.state.editReportModal\n                    }}>\n                        <Modal.Header >\n                            <Modal.Title>Edit Field</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                        <Form id=\"edit-form\">\n                            <Form.Group controlId=\"formCompanyName\">\n                                <Form.Label>Company Name</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.companyName)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formContactPerson\">\n                                <Form.Label>Contact Person</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.contactPerson)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formPosition\">\n                                <Form.Label>Position</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.position)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"email1\">\n                                <Form.Label>Email 1</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.email1)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"email2\">\n                                <Form.Label>Email 2</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.email2)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"mobile1\">\n                                <Form.Label>Mobile 1</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.mobile1)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"mobile2\">\n                                <Form.Label>Mobile 2</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.mobile2)}/>\n                            </Form.Group>                       \n\n                            <Form.Group controlId=\"website\">\n                                <Form.Label>Website</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.website)}/>\n                            </Form.Group>                       \n\n                            <Form.Group controlId=\"industry\">\n                                <Form.Label>Industry</Form.Label>\n                                <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-secondary\"\n                                        title=\"Industry\"\n                                        id=\"input-group-dropdown-12\"\n                                        >\n                                            {\n                                                categoriesAndIndustries.map( category => {\n                                                    return(\n                                                        <>\n                                                        <DropdownButton\n                                                        key={category.industry}\n                                                        style={{width: '70%', margin: '15px'}}\n                                                        variant=\"outline-secondary\"\n                                                        title={category.industry}\n                                                        id=\"input-group-dropdown-14\"\n                                                        >\n\n                                                        <div style={{maxHeight: '350px', overflowY: 'scroll'}}>\n                                                            {\n                                                                category.subSector.map( subsector => {\n                                                                    return(\n                                                                      <Dropdown.Item key={subsector} >{subsector}</Dropdown.Item>\n                                                        )\n                                                                })\n                                                            }\n                                                                    </div>\n                                                    </DropdownButton>\n\n                                                    </>\n                                                    )\n                                                })\n                                            }\n\n                                    </DropdownButton>\n                                </Form.Group>                       \n\n                            <Form.Group controlId=\"productDescription\">\n                                <Form.Label>Product Description</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.productDescription)}/>\n                            </Form.Group>                       \n\n                            <Form.Group controlId=\"country\">\n                                <Form.Label>Country</Form.Label>\n                                <Form.Control type=\"textbox\" placeholder={this.getEditField(this.state.editFieldID).map(field => field.country)}/>\n                            </Form.Group>                       \n\n\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.toggleEditModalDisplay}>Cancel</Button>\n                            {\n                                this.state.editBtnClicked < 1 ? saveBtn : saveLoadingBtn\n                            }\n                        </Modal.Footer>\n                        </Modal.Dialog>\n                </div>   \n\n                {/* add a report modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.addModalDisplay\n                }}>\n                <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                    display: this.state.addModalDisplay\n                }}>\n                    <Modal.Header >\n                        <Modal.Title>Report Entry</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    <Form id=\"add-form\">\n\n                    <Form.Group controlId=\"projects\">\n                            <Form.Label>Project</Form.Label>\n                            <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-secondary\"\n                                        title={this.state.projectName}\n                                        id=\"input-group-dropdown-7\"\n                                        >\n                                            {\n                                                this.state.projects.map( (project, index) => {\n                                                    return(\n                                                    <Dropdown.Item  key={project._id} className=\"projects-item\" onClick={() => {\n                                                        this.setState({\n                                                            projectName: project.projectName\n                                                        })\n                                                    }}>\n                                                        {project.projectName}\n                                                    </Dropdown.Item>\n                                                )\n                                            })\n                                        }\n\n                                    </DropdownButton> \n                        </Form.Group>                       \n                        <Form.Group controlId=\"formCompanyName\">\n                            <Form.Label>Company Name</Form.Label>\n                            <Form.Control name=\"company\" type=\"textbox\" placeholder=\"Enter name\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formContactPerson\">\n                            <Form.Label>Contact Person</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"Contact Person\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formPosition\">\n                            <Form.Label>Position</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"Position\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email1\">\n                            <Form.Label>Email 1</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"example@example.com\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"email2\">\n                            <Form.Label>Email 2</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"example@example.com\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"mobile1\">\n                            <Form.Label>Mobile 1</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"07000000\"/>\n                        </Form.Group>\n\n                         <Form.Group controlId=\"mobile2\">\n                            <Form.Label>Mobile 2</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"0700000\"/>\n                        </Form.Group>                       \n\n                        <Form.Group controlId=\"website\">\n                            <Form.Label>Website</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"www.example.com\"/>\n                        </Form.Group>                       \n\n                        <Form.Group controlId=\"industry\">\n                            <Form.Label>Industry</Form.Label>\n                            <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-secondary\"\n                                        title={this.state.industry}\n                                        id=\"input-group-dropdown-2\"\n                                        >\n                                            {\n                                                categoriesAndIndustries.map( category => {\n                                                    return(\n                                                        <>\n                                                   <DropdownButton\n                                                        key={category.industry}\n                                                        style={{width: '70%', margin: '15px'}}\n                                                        variant=\"outline-secondary\"\n                                                        title={category.industry}\n                                                        onClick={() => {this.setState({ determinedIndustry: category.industry})}}\n                                                        id=\"input-group-dropdown-31\"\n                                                        >\n\n                                                        <div \n                                                            style={{maxHeight: '350px', overflowY: 'scroll'}} \n                                                          >\n                                                            {\n                                                                category.subSector.map( (subsector,index) => {\n                                                                    return(\n                                                                      <Dropdown.Item  key={subsector} className=\"subsectors\"  onClick={() => {\n                                                                        this.setState({\n                                                                            industry: subsector\n                                                                        })\n                                                                }} >{subsector}</Dropdown.Item>\n                                                        )\n                                                                })\n                                                            }\n                                                                    </div>\n                                                    </DropdownButton>\n\n                                                    </>\n                                                    )\n                                                })\n                                            }\n\n                                    </DropdownButton>\n                        </Form.Group>                       \n\n                        <Form.Group controlId=\"productDescription\">\n                            <Form.Label>Product Description</Form.Label>\n                            <Form.Control name=\"productdescription\" type=\"textbox\" placeholder=\"e.g supplies\"/>\n                        </Form.Group>                       \n\n                        <Form.Group controlId=\"country\">\n                            <Form.Label>Country</Form.Label>\n                            <Form.Control name=\"country\" type=\"textbox\" placeholder=\"e.g Kenya\"/>\n                        </Form.Group>                       \n\n\n                        </Form>\n                    </Modal.Body>\n                    <small id=\"warning\" style={{color: 'red', margin: '18px'}}></small>\n                    <br/>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.toggleAddModalDisplay}>Close</Button>\n                        {\n                            this.state.addBtnClicked < 1 ? addBtn : addLoadingBtn\n                        }\n                    </Modal.Footer>\n                    </Modal.Dialog>\n                </div>\n\n                {/* send individual email */}\n                    <div className=\"modal-bg\" style={{\n                        display: this.state.individualEmailModule\n                    }}>\n                    <Modal.Dialog>    \n                    <Modal.Header >\n                        <Modal.Title>Send Individual Email</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    <Form>\n                        <Form.Group controlId=\"formContactPerson\">\n                            <Form.Label>Subject</Form.Label>\n                            <Form.Control type=\"textbox\" placeholder=\"e.g Welcome to B2B Africa\"/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formPosition\">\n                            <Form.Label>Body</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter message...\"/>\n                        </Form.Group>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.toggleIndividualEmailModalDisplay}>Cancel</Button>\n                        <Button variant=\"primary\">Send Email</Button>\n                    </Modal.Footer>\n                    </Modal.Dialog>\n                </div>\n\n\n                {/* add a category modal */}\n                <div className=\"modal-bg\" style={{\n                    display: this.state.categoryModal\n                }}>\n                <Modal.Dialog scrollable={true}  className=\"modal-add-entry\" style={{\n                    display: this.state.categoryModal\n                }}>\n                    <Modal.Header >\n                        <Modal.Title>Add An Industry/Subsector</Modal.Title>\n                    </Modal.Header>\n\n                    <Modal.Body style={{maxHeight: 'calc(100vh - 210px)', overflowY: 'auto'}}>\n                    <Form>\n                            <Form.Group controlId=\"formRecipients\">\n                                <Form.Label></Form.Label>\n                                </Form.Group>\n                            \n                                <Form.Group controlId=\"formIndustryName\">\n                                    <Form.Label>Industry</Form.Label>\n                                    <Form.Control className=\"industrysubsector\" type=\"textbox\" placeholder=\"e.g BUILDING AND CONSTRUCTION\"/>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formSubsectorName\">\n                                    <Form.Label>Subsector</Form.Label>\n                                    <Form.Control className=\"industrysubsector\" type=\"textbox\" placeholder=\"e.g Automation\"/>\n                                    <small style={{color: 'green'}}>Kindly separate subsectors with a comma \",\"</small>\n                                </Form.Group>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={ () => {\n                            this.toggleIndstryModalDisplay();\n                            }}>Cancel</Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            axios.post(\"/api/v1/admin/add_industry\", {\n                                industry: document.getElementsByClassName(\"industrysubsector\")[0].value,\n                                subSector: document.getElementsByClassName(\"industrysubsector\")[1].value\n                            }, {\n                                headers: {\n                                    'auth-token': `${localStorage.getItem('auth-token')}`\n                                  }\n                            }).then(res => {\n                                alert(\"Succesfully added an Industry\" + res);\n                                this.reloadPage();\n                            }).catch(err => {console.log(err)})\n                        }}>Add</Button>\n                    </Modal.Footer>\n                    </Modal.Dialog>\n                </div>\n\n   \n\n\n                <div className=\"container\">\n                    <h2 id=\"h2-title\">Database</h2>\n                    <Nav variant=\"pills\" defaultActiveKey=\"#\" className=\"navigation-tab-menu\" style={{position: 'absolute', left:' 50px'}}>\n                        <Nav.Item>\n                            <Nav.Link href=\"#\">View</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link onClick={this.toggleExportModalDisplay} eventKey=\"link-1\">\n                                    Export\n                                    <img src={excel} alt=\"add\" style={{width: '1.5rem', height: '1.5rem', borderRadius: '50%',marginLeft: '5px'}}/>\n                            </Nav.Link>\n                        </Nav.Item>\n                \n                        <Nav.Item>\n                            <Nav.Link style={{position: 'absolute', right: 0,top: 0, display: 'flex'}}>\n                                <span style={{ marginRight: '1.5rem' }}>Filter:</span>\n                                   {/* filter according to sector and subsector */}\n                                    <DropdownButton\n                                        style={{ marginRight: '1rem', width: '100%'}}\n                                        variant=\"outline-primary\"\n                                        title={this.state.chosenIndustry}\n                                        id=\"input-group-dropdown-2\"\n                                        >\n                                            {\n                                                categoriesAndIndustries.map( category => {\n                                                    return(\n                                                        <>\n                                                        <DropdownButton\n                                                        key={category.industry}\n                                                        style={{width: '70%', margin: '15px' }}\n                                                        variant=\"outline-secondary\"\n                                                        title={category.industry}\n                                                        id=\"input-group-dropdown-3\"\n                                                        >\n\n                                                        <div style={{maxHeight: '350px', overflowY: 'scroll'}}>\n                                                            {\n                                                                Array.isArray(category.subSector) ? \n                                                                category.subSector.map( subsector => {\n                                                                    return(\n                                                                      <Dropdown.Item key={subsector} \n                                                                        onClick={() => {\n                                                                            this.setState({\n                                                                                chosenIndustry: subsector,\n                                                                                reports: this.state.reports.filter(report => report.industry === subsector)\n                                                                            })\n                                                                        }}\n                                                                      >{subsector}</Dropdown.Item>\n                                                        )\n                                                                }) :   category.subSector.split(\",\").map( subsector => {\n                                                                    return(\n                                                                      <Dropdown.Item key={subsector} \n                                                                        onClick={() => {\n                                                                            this.setState({\n                                                                                chosenIndustry: subsector,\n                                                                                reports: this.state.reports.filter(report => report.industry === subsector)\n                                                                            })\n                                                                        }}\n                                                                      >{subsector}</Dropdown.Item>\n                                                        )\n                                                                })\n                                                            }\n                                                                    </div>\n                                                    </DropdownButton>\n\n                                                    </>\n                                                    )\n                                                })\n                                            }\n                                    </DropdownButton>\n\n                                    {/* filter according to Project*/}\n                                    <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-primary\"\n                                        title=\"Project\"\n                                        id=\"input-group-dropdown-4\"\n                                        >\n                                            {\n                                                this.state.projects.map(project => {\n                                                    return(\n                                                        <Dropdown.Item key={project._id} onClick={() => {\n                                                            this.setState({\n                                                                reports: this.state.reports.filter(report => report.projectName === project.projectName)\n                                                            });\n                                                        }}>{project.projectName}</Dropdown.Item>\n                                                    )\n                                                })\n                                            }\n\n                                    </DropdownButton>\n                                    {/* filter according to user*/}\n                                    <DropdownButton\n                                        style={{ marginRight: '1rem' }}\n                                        variant=\"outline-primary\"\n                                        title={this.state.chosenUser}\n                                        id=\"input-group-dropdown-5\"\n                                        >\n                                            {\n                                                this.state.users.map( user => {\n                                                    return(\n                                                        <Dropdown.Item key={user._id} onClick={() => {\n                                                            this.setState({\n                                                                chosenUser: user.fullname,\n                                                                reports: this.state.reports.filter( report => report.submittedBy.toLowerCase() === user.username.toLowerCase())\n                                                            })\n                                                        }}>{user.fullname}</Dropdown.Item>\n                                                    )\n                                                })\n                                            }\n                                    </DropdownButton>\n                            </Nav.Link>\n                        </Nav.Item>\n                    <Nav.Item onClick={this.toggleEmailModalDisplay}>\n                            <Nav.Link eventKey=\"link-4\">\n                                Send bulk email\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item style={{position: 'absolute', left: '30%'}}>\n                        <Nav.Link href=\"#action\"  onClick={\n                            () => {\n                                this.toggleImportModalDisplay()\n                            }}>\n                            Import file\n                            <img src={excel} alt=\"add\" style={{width: '1.5rem', height: '1.5rem', borderRadius: '50%',marginLeft: '5px'}}/>\n                        </Nav.Link>\n                        \n                        </Nav.Item>\n\n                        <Nav.Item style={{position: 'absolute', left: '42.5%'}}>\n                            <Nav.Link href=\"#\"  onClick={\n                                () => {\n                                    this.toggleAddModalDisplay();\n                                }}>\n                                Add entry\n                           </Nav.Link>                        \n                        </Nav.Item>\n                      \n                        <Nav.Item style={{position: 'absolute', left: '52.5%'}}>\n                        <Nav.Link href=\"#\" onClick={ () => {\n                            this.toggleIndstryModalDisplay();\n                        }}>\n                            Add Industry\n                       </Nav.Link>                        \n                    </Nav.Item>\n                        </Nav>\n                    <section className=\"section-container\" > \n                    <Table variant='dark' className=\"reports-table\" style={{marginTop: '30px'}} striped bordered hover responsive >\n                            <thead>\n                                <tr variant=\"light\">\n                                <th>#</th>\n                                <th>Company Name</th>\n                                <th>Contact Person</th>\n                                <th>Position</th>\n                                <th>Email 1</th>\n                                <th>Email 2</th>\n                                <th>Mobile 1</th>\n                                <th>Mobile 2</th>\n                                <th>Website</th>\n                                <th>Industry</th>\n                                <th>Subsector</th>\n                                <th>Product Description</th>\n                                <th>Country</th>\n                                <th>Project</th>\n                                <th>Confirmed</th>\n                                <th>Collection Date</th>\n                                <th>Collection Time</th>\n                                <th>Submitted by</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                this.state.reports.reverse().map((user,index) => {\n                                    return(<>\n                                \n                                    <img  key={user.password} src={edit} style={{marginLeft: '-5px',}} className=\"delete-icon\" \n                                        onClick={() => {\n                                            this.setState({\n                                                editFieldID: user._id,\n                                                editFieldIndex: index\n                                            });\n                                            this.toggleEditModalDisplay()\n                                            }}/> \n                                    <img  key={user.password} src={trash} style={{marginLeft: '30px'}} className=\"delete-icon\" onClick={() => {\n                                        this.setState({\n                                            editFieldID: user._id\n                                           \n                                        });\n                                        this.toggleDeleteModal();\n                                    }}/>\n                                        <tr key={index} className=\"user-rows\" onClick={this.toggleIndividualEmailModalDisplay}>\n                                        <td>{index}</td>\n                                        <td> {user.companyName }</td>\n                                        <td>{user.contactPerson }</td>\n                                        <td> {user.position}</td>\n                                        <td>{user.email1}</td>\n                                        <td>{user.email2}</td>\n                                        <td>{user.mobile1}</td>\n                                        <td>{user.mobile2}</td>\n                                        <td>{user.website}</td>\n                                        <td>{ user.industry }</td>\n                                        <td>{ user.subSector }</td>\n                                        <td>{ user.productDescription }</td>\n                                        <td>{ user.country }</td>\n                                        <td>{ user.projectName }</td>\n                                        <td style={{ color: 'yellow'}}>{ user.confirmed ? 'Confirmed' : 'Pending'}</td>\n                                        <td>{ user.collectionDate }</td>\n                                        <td>{user.collectionTime}</td>\n                                        <td>{ user.submittedBy}</td>\n                                        </tr>\n                                        </>\n                                    )\n                                })\n                            }\n                        </tbody>\n                        </Table>\n                    </section>\n                </div>\n                </>\n            )\n        }\n        return (\n            <div className=\"spinner-bg\">\n                <Spinner id=\"spinner\" animation=\"grow\" />\n            </div>\n            );\n    }\n}"]},"metadata":{},"sourceType":"module"}