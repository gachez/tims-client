{"ast":null,"code":"var _jsxFileName = \"/home/gachez/EnterpriseSystems/tims-client/src/index/App/Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Popover, OverlayTrigger, Spinner } from 'react-bootstrap';\nimport './Login/Login.css';\nimport hero from './Login/data_processing.png';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoaded: false,\n      isAdmin: false,\n      loginUser: [],\n      loginClicked: false,\n      errorEmail: false,\n      errorPassword: false,\n      emailPop: 'example@example.com',\n      passwordPop: 'Should be more than 6 characters',\n      errorColor: 'green',\n      route: \"\"\n    };\n\n    this.authenticateUser = async () => {\n      const user = {\n        email: document.getElementsByName('email')[0].value,\n        password: document.getElementsByName('password')[0].value\n      };\n\n      try {\n        axios.post(\"https://a123ef.df.r.appspot.com/api/v1/login_user\", user).then(res => {\n          console.log('loggin in...');\n\n          switch (res.data) {\n            case 'Email does not exist':\n              document.getElementsByName('email')[0].focus();\n              this.setState({\n                errorEmail: true,\n                loginClicked: false,\n                emailPop: res.data,\n                errorColor: 'rgb(242, 11, 63)'\n              });\n              break;\n\n            case 'Password invalid':\n              document.getElementsByName('password')[0].focus();\n              this.setState({\n                errorPassword: true,\n                loginClicked: false,\n                passwordPop: res.data,\n                errorColor: 'rgb(242, 11, 63)'\n              });\n              break;\n\n            case 'admin':\n              this.setState({\n                loginClicked: true\n              });\n              localStorage.setItem('auth-token', res.headers['auth-token']);\n              window.location.href = window.location.href + 'dashboard';\n              break;\n\n            case 'not admin':\n              this.setState({\n                loginClicked: false\n              });\n              localStorage.setItem('auth-token', res.headers['auth-token']);\n              localStorage.setItem('userName', user.email);\n              localStorage.setItem('userEmail', user.username);\n              window.location.href = window.location.href + 'user-dashboard';\n              break;\n\n            default:\n              this.setState({\n                loginClicked: true\n              });\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoaded: true\n    });\n    localStorage.clear();\n  }\n\n  render() {\n    if (this.state.isLoaded) {\n      const loadingBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"grow\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }), \"Logging in...\");\n      const loginBtn = /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.authenticateUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, \"Log in\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"LoginContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"left-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 31\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"focus\",\n        placement: \"top\",\n        overlay: /*#__PURE__*/React.createElement(Popover, {\n          id: `popover-positioned-top`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Popover.Title, {\n          style: {\n            color: this.state.errorColor,\n            fontSize: '20px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(Popover.Content, {\n          style: {\n            color: this.state.errorColor\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }\n        }, this.state.emailPop)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(OverlayTrigger, {\n        trigger: \"focus\",\n        placement: \"top\",\n        overlay: /*#__PURE__*/React.createElement(Popover, {\n          id: `popover-positioned-top`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Popover.Title, {\n          style: {\n            fontSize: '20px',\n            color: 'green'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(Popover.Content, {\n          style: {\n            color: this.state.errorColor\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }\n        }, this.state.passwordPop)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Link, {\n        to: this.state.route,\n        onClick: () => {\n          this.setState({\n            loginClicked: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, !this.state.loginClicked ? loginBtn : loadingBtn))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"right-section\",\n        style: {\n          backgroundImage: `url(${hero})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        width: '100vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 18\n      }\n    }));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/gachez/EnterpriseSystems/tims-client/src/index/App/Login.js"],"names":["React","useEffect","useState","Form","Button","Popover","OverlayTrigger","Spinner","hero","Link","axios","Login","Component","state","isLoaded","isAdmin","loginUser","loginClicked","errorEmail","errorPassword","emailPop","passwordPop","errorColor","route","authenticateUser","user","email","document","getElementsByName","value","password","post","then","res","console","log","data","focus","setState","localStorage","setItem","headers","window","location","href","username","err","componentDidMount","clear","render","loadingBtn","loginBtn","color","fontSize","backgroundImage","display","justifyContent","alignItems","height","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Form, Button,  Popover, OverlayTrigger, Spinner} from 'react-bootstrap';\nimport './Login/Login.css';\nimport hero from './Login/data_processing.png';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\n   \nclass Login extends React.Component {\n    state={\n        isLoaded: false,\n        isAdmin: false,\n        loginUser: [],\n        loginClicked: false,\n        errorEmail: false,\n        errorPassword: false,\n        emailPop: 'example@example.com',\n        passwordPop: 'Should be more than 6 characters',\n        errorColor: 'green',\n        route: \"\"\n    }\n\n    componentDidMount(){\n        this.setState({\n            isLoaded: true\n        });\n        localStorage.clear()\n    }\n\n    authenticateUser = async () => {\n        const user = {\n            email: document.getElementsByName('email')[0].value,\n            password:  document.getElementsByName('password')[0].value\n        }\n        try{\n            axios.post(\"https://a123ef.df.r.appspot.com/api/v1/login_user\", user)\n            .then(res => {\n                console.log('loggin in...')\n                switch(res.data) {\n                    case 'Email does not exist':\n                        document.getElementsByName('email')[0].focus();\n                        this.setState({\n                        errorEmail: true,\n                        loginClicked: false,\n                        emailPop: res.data,\n                        errorColor: 'rgb(242, 11, 63)'\n                        });\n                        break;\n                    case 'Password invalid':\n                        document.getElementsByName('password')[0].focus();\n                        this.setState({\n                            errorPassword: true,\n                            loginClicked: false,\n                            passwordPop: res.data,\n                            errorColor: 'rgb(242, 11, 63)'\n                        });  \n                        break;\n                    case 'admin':\n                        this.setState({\n                            loginClicked: true\n                        })\n                        localStorage.setItem('auth-token',  res.headers['auth-token']); \n                        window.location.href = window.location.href + 'dashboard';\n                    break;\n\n                    case 'not admin':\n                        this.setState({\n                            loginClicked: false\n                        })\n                        localStorage.setItem('auth-token',  res.headers['auth-token'])\n                        localStorage.setItem('userName', user.email)\n                        localStorage.setItem('userEmail', user.username) \n                        window.location.href = window.location.href + 'user-dashboard'\n                    break;\n                    \n\n                    default: \n                        this.setState({\n                            loginClicked: true\n                        })\n                }\n            })\n        } catch (err) { console.log(err)}\n    \n    }\n\n    render() {\n        if(this.state.isLoaded){\n\n        const loadingBtn = (\n            <Button variant=\"primary\" disabled>\n                <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                />\n                Logging in...\n            </Button>  );\n\n        const loginBtn = (\n            <Button variant=\"primary\" type=\"submit\" onClick={this.authenticateUser}>\n                            Log in\n                        </Button>  \n        );\n\n            return(\n                <div className=\"LoginContainer\">\n                    <section className=\"left-section\">\n                      <Form className=\"login-form\">\n                        <Form.Group controlId=\"formBasicEmail\">\n                              <Form.Label>Email address</Form.Label>\n                            <OverlayTrigger\n                                trigger=\"focus\"\n                                placement='top'\n                                overlay={\n                                    <Popover id={`popover-positioned-top`}>\n                                    <Popover.Title style={{color: this.state.errorColor, fontSize: '20px'}}></Popover.Title>\n                                    <Popover.Content style={{color: this.state.errorColor}}>\n                                        {this.state.emailPop}\n                                    </Popover.Content>\n                                    </Popover>\n                                }\n                                >\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter email\" required={true}/>\n                            </OverlayTrigger>\n                        </Form.Group>\n    \n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <OverlayTrigger\n                                trigger=\"focus\"\n                                placement='top'\n                                overlay={\n                                    <Popover id={`popover-positioned-top`}>\n                                    <Popover.Title style={{fontSize: '20px', color: 'green'}}></Popover.Title>\n                                    <Popover.Content style={{color: this.state.errorColor}}>\n                                        {this.state.passwordPop}\n                                    </Popover.Content>\n                                    </Popover>\n                                }\n                                >\n                            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" required={true}/>\n                            </OverlayTrigger>\n                        </Form.Group>\n                        <Link to={this.state.route} onClick={() => {\n                            this.setState({\n                                loginClicked: true\n                            })\n                        }}>\n                        {\n                            !this.state.loginClicked ? loginBtn : loadingBtn\n                        }\n                        </Link>\n    \n                        </Form>\n                    </section>\n                    <section className=\"right-section\" style={{\n                        backgroundImage: `url(${hero})`\n                    }}>\n    \n                    </section>\n                </div>\n            )\n        } \n        return (\n            <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', width: '100vw'}}>\n                 <Spinner animation=\"grow\" />\n            </div>\n        )\n    }\n}\n\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}